{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nconst styleCard = {\n  width: \"300px\",\n  height: \"300px\"\n};\nconst style = {\n  textAlign: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nexport default class RouletteCard extends Component {\n  render() {\n    const _this$props = this.props,\n          yelpResults = _this$props.yelpResults,\n          indexArray = _this$props.indexArray,\n          randomYelp = _this$props.randomYelp,\n          setResult = _this$props.setResult;\n    console.log(yelpResults); // TODO Need failsafe for bad yelp call\n\n    let result = yelpResults.length > 0 ? yelpResults[indexArray[indexArray.length - 1]] : null;\n    return yelpResults.length > 0 ? React.createElement(\"div\", {\n      style: style,\n      className: \"roulette-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: result.image_url,\n      fluid: true,\n      wrapped: true,\n      ui: false,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, result.name), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, result.location.display_address), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, result.display_phone), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, result.rating, \" stars\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, result.price ? \"Price: \".concat(result.price) : null), React.createElement(\"a\", {\n      href: result.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"View on Yelp\")), indexArray.length === 3 ? React.createElement(Button, {\n      onClick: () => randomYelp(indexArray),\n      style: {\n        backgroundColor: \"#F9Cf00\",\n        color: \"black\",\n        fontFamily: \"Arvo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"LAST SPIN!\") : indexArray.length > 3 ? null : React.createElement(Button, {\n      onClick: () => randomYelp(indexArray),\n      style: {\n        backgroundColor: \"#F9Cf00\",\n        color: \"black\",\n        fontFamily: \"Arvo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, 4 - indexArray.length, \" Spins Remaining\"), React.createElement(Button, {\n      as: Link,\n      name: \"result\",\n      to: \"result\",\n      onClick: () => setResult(result),\n      style: {\n        backgroundColor: \"#F9Cf00\",\n        color: \"black\",\n        fontFamily: \"Arvo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"OK\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Loading....\");\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js"],"names":["React","Component","Card","Image","Button","Link","styleCard","width","height","style","textAlign","display","justifyContent","RouletteCard","render","props","yelpResults","indexArray","randomYelp","setResult","console","log","result","length","image_url","name","location","display_address","display_phone","rating","price","url","backgroundColor","color","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,MAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE,QADC;AAEZC,EAAAA,OAAO,EAAE,MAFG;AAGZC,EAAAA,cAAc,EAAE;AAHJ,CAAd;AAKA,eAAe,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAClDa,EAAAA,MAAM,GAAG;AAAA,wBACoD,KAAKC,KADzD;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,UADd,eACcA,UADd;AAAA,UAC0BC,UAD1B,eAC0BA,UAD1B;AAAA,UACsCC,SADtC,eACsCA,SADtC;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAFO,CAGP;;AACA,QAAIM,MAAM,GACRN,WAAW,CAACO,MAAZ,GAAqB,CAArB,GACIP,WAAW,CAACC,UAAU,CAACA,UAAU,CAACM,MAAX,GAAoB,CAArB,CAAX,CADf,GAEI,IAHN;AAKA,WAAOP,WAAW,CAACO,MAAZ,GAAqB,CAArB,GACL;AAAK,MAAA,KAAK,EAAEd,KAAZ;AAAmB,MAAA,SAAS,EAAC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEa,MAAM,CAACE,SADd;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,EAAE,EAAE,KAJN;AAKE,MAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcF,MAAM,CAACG,IAArB,CADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MAAM,CAACI,QAAP,CAAgBC,eADnB,CAFF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBL,MAAM,CAACM,aAA1B,CALF,EAME,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBN,MAAM,CAACO,MAA1B,WANF,EAOE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,MAAM,CAACQ,KAAP,oBAAyBR,MAAM,CAACQ,KAAhC,IAA0C,IAD7C,CAPF,EAUE;AAAG,MAAA,IAAI,EAAER,MAAM,CAACS,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,CARF,EAoBGd,UAAU,CAACM,MAAX,KAAsB,CAAtB,GACC,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAML,UAAU,CAACD,UAAD,CAD3B;AAEE,MAAA,KAAK,EAAE;AACLe,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAWGjB,UAAU,CAACM,MAAX,GAAoB,CAApB,GAAwB,IAAxB,GACF,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAML,UAAU,CAACD,UAAD,CAD3B;AAEE,MAAA,KAAK,EAAE;AACLe,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,IAAIjB,UAAU,CAACM,MARlB,qBAhCJ,EA2CE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAElB,IADN;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,OAAO,EAAE,MAAMc,SAAS,CAACG,MAAD,CAJ1B;AAKE,MAAA,KAAK,EAAE;AACLU,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,UAAU,EAAE;AAHP,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF,CADF,CADK,GA6DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA7DF;AA+DD;;AAzEiD","sourcesContent":["import React, { Component } from \"react\"\nimport { Card, Image, Button } from \"semantic-ui-react\"\nimport { Link } from \"react-router-dom\"\n\nconst styleCard = {\n  width: \"300px\",\n  height: \"300px\"\n}\n\nconst style = {\n  textAlign: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\"\n}\nexport default class RouletteCard extends Component {\n  render() {\n    const { yelpResults, indexArray, randomYelp, setResult } = this.props\n    console.log(yelpResults)\n    // TODO Need failsafe for bad yelp call\n    let result =\n      yelpResults.length > 0\n        ? yelpResults[indexArray[indexArray.length - 1]]\n        : null\n\n    return yelpResults.length > 0 ? (\n      <div style={style} className=\"roulette-card\">\n        <Card centered>\n          <Image\n            src={result.image_url}\n            fluid\n            wrapped\n            ui={false}\n            size=\"medium\"\n          />\n          <Card.Content>\n            <Card.Header>{result.name}</Card.Header>\n            <Card.Description>\n              {result.location.display_address}\n            </Card.Description>\n            <Card.Description>{result.display_phone}</Card.Description>\n            <Card.Description>{result.rating} stars</Card.Description>\n            <Card.Description>\n              {result.price ? `Price: ${result.price}` : null}\n            </Card.Description>\n            <a href={result.url}>View on Yelp</a>\n          </Card.Content>\n          {indexArray.length === 3 ? (\n            <Button\n              onClick={() => randomYelp(indexArray)}\n              style={{\n                backgroundColor: \"#F9Cf00\",\n                color: \"black\",\n                fontFamily: \"Arvo\"\n              }}\n            >\n              LAST SPIN!\n            </Button>\n          ) : indexArray.length > 3 ? null : (\n            <Button\n              onClick={() => randomYelp(indexArray)}\n              style={{\n                backgroundColor: \"#F9Cf00\",\n                color: \"black\",\n                fontFamily: \"Arvo\"\n              }}\n            >\n              {4 - indexArray.length} Spins Remaining\n            </Button>\n          )}\n          <Button\n            as={Link}\n            name=\"result\"\n            to=\"result\"\n            onClick={() => setResult(result)}\n            style={{\n              backgroundColor: \"#F9Cf00\",\n              color: \"black\",\n              fontFamily: \"Arvo\"\n            }}\n          >\n            OK\n          </Button>\n        </Card>\n      </div>\n    ) : (\n      <div>Loading....</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}