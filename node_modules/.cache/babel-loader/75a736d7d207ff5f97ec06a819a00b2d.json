{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/login/NewUserForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Radio, Label, Segment, SegmentGroup, Image } from \"semantic-ui-react\";\nimport UserAvatars from \"./UserAvatars\";\nconst loginURL = \"http://localhost:3000/login\";\nconst URL = \"http://localhost:3000/\";\n\nclass NewUserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usernameInput: \"\",\n      passwordInput: \"\",\n      img_url: UserAvatars[0]\n    };\n\n    this.handleSubmit = () => {\n      fetch(URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.usernameInput,\n          password: this.state.passwordInput\n        })\n      }).then(res => res.json()) // .then(console.log.results)\n      .then(userdata => this.props.getUserId(userdata.results)).catch(err => console.log(err));\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n\n    this.selectImage = e => {\n      this.setState({\n        img_url: value\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          usernameInput = _this$state.usernameInput,\n          passwordInput = _this$state.passwordInput,\n          img_url = _this$state.img_url;\n    console.log(img_url);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      size: \"big\",\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      label: \"Username\",\n      placeholder: \"Enter username\",\n      error: true,\n      name: \"usernameInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      label: \"Password\",\n      placeholder: \"Enter password\",\n      name: \"passwordInput\",\n      error: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Image.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Image, {\n      circular: true,\n      src: UserAvatars[0],\n      size: \"tiny\",\n      onClick: this.selectImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Button, {\n      content: \"Submit\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewUserForm; // <Segment.Group>\n// <Label circular as='a' attached=\"top\" image={imageProps} />\n//     {/* // <img src={UserAvatars[0]} width=\"1000\" height=\"1000\"/> */}\n// {/* </Label> */}\n// <Form.Radio\n//   name=\"avatar-group\"\n//   value={UserAvatars[0]}\n//   checked={img_url === UserAvatars[0]}\n//   onChange={this.handleRadioChange}\n//   img src={UserAvatars[0]}\n// />\n// </Segment.Group>","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/login/NewUserForm.js"],"names":["React","Component","Form","Button","Radio","Label","Segment","SegmentGroup","Image","UserAvatars","loginURL","URL","NewUserForm","state","usernameInput","passwordInput","img_url","handleSubmit","fetch","method","headers","Accept","body","JSON","stringify","username","password","then","res","json","userdata","props","getUserId","results","catch","err","console","log","handleChange","e","targetValue","target","value","targetName","name","setState","selectImage","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Radio,\n  Label,\n  Segment,\n  SegmentGroup,\n  Image\n} from \"semantic-ui-react\";\nimport UserAvatars from \"./UserAvatars\";\nconst loginURL = \"http://localhost:3000/login\";\n\nconst URL = \"http://localhost:3000/\";\n\nclass NewUserForm extends Component {\n  state = {\n    usernameInput: \"\",\n    passwordInput: \"\",\n    img_url: UserAvatars[0]\n  };\n\n  handleSubmit = () => {\n    fetch(URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.usernameInput,\n        password: this.state.passwordInput\n      })\n    })\n      .then(res => res.json())\n      // .then(console.log.results)\n      .then(userdata => this.props.getUserId(userdata.results))\n      .catch(err => console.log(err));\n  };\n\n  handleChange = e => {\n    const targetValue = e.target.value;\n    const targetName = e.target.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  selectImage = (e) => {\n    this.setState({ img_url: value });\n  };\n\n  render() {\n    const { usernameInput, passwordInput, img_url } = this.state;\n    console.log(img_url);\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit} size=\"big\" widths=\"equal\">\n          <Form.Group>\n            <Form.Input\n              onChange={this.handleChange}\n              fluid\n              label=\"Username\"\n              placeholder=\"Enter username\"\n              error\n              name=\"usernameInput\"\n            />\n            <Form.Input\n              onChange={this.handleChange}\n              fluid\n              label=\"Password\"\n              placeholder=\"Enter password\"\n              name=\"passwordInput\"\n              error\n            />\n          </Form.Group>\n          <Image.Group>\n            <Image circular src={UserAvatars[0]} size=\"tiny\" onClick={this.selectImage}/>\n          </Image.Group>\n          <Button content=\"Submit\" type=\"submit\" />\n        </Form>\n      </div>\n    );\n  }\n}\nexport default NewUserForm;\n\n// <Segment.Group>\n// <Label circular as='a' attached=\"top\" image={imageProps} />\n//     {/* // <img src={UserAvatars[0]} width=\"1000\" height=\"1000\"/> */}\n// {/* </Label> */}\n// <Form.Radio\n//   name=\"avatar-group\"\n//   value={UserAvatars[0]}\n//   checked={img_url === UserAvatars[0]}\n//   onChange={this.handleRadioChange}\n//   img src={UserAvatars[0]}\n// />\n// </Segment.Group>\n"]},"metadata":{},"sourceType":"module"}