{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: \"\",\n      location: \"\",\n      searchInput: \"\",\n      members: [] //,\n      // team_id: undefined\n\n    };\n\n    this.saveTeamMembers = () => {\n      // TODO Take array of members and run POST requests to the user_teams url\n      const fetchUserTeams = this.props.fetchURL + \"/user_teams\";\n      console.log(this.state.members);\n      this.state.members.forEach(member => {\n        fetch(fetchUserTeams, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: member.id,\n            team_id: this.state.team_id\n          })\n        }).then(res => res.json()).then(newMember => console.log(newMember)).catch(err => console.log(err));\n      });\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      const allTeams = this.props.allTeams;\n      this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput\n      }); // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()) //   .then(team => this.setState({ team_id: team.id }))\n      .then(team => {\n        this.props.getCurrentTeam(team);\n        console.log(team);\n      }).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members,\n          team_name = _this$state.team_name,\n          location = _this$state.location;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null; // console.log(currentUser);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(MemberList, {\n      currentUser: currentUser,\n      members: members,\n      removeMember: this.removeMember,\n      team_name: team_name,\n      location: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(MemberForm, {\n      handleChange: this.handleChange,\n      saveTeamMembers: this.saveTeamMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TeamSearch, {\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","TeamSearch","MemberForm","MemberList","_","TeamContainer","state","team_name","location","searchInput","members","saveTeamMembers","fetchUserTeams","props","fetchURL","console","log","forEach","member","fetch","method","headers","body","JSON","stringify","user_id","id","team_id","then","res","json","newMember","catch","err","addATeam","e","team","fetchTeams","allTeams","setState","teamNameInput","locationInput","getCurrentTeam","addMember","memberCheck","includes","removeMember","newMemberArray","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\n\nexport default class TeamContainer extends Component {\n  state = {\n    team_name: \"\",\n    location: \"\",\n    searchInput: \"\",\n    members: [] //,\n    // team_id: undefined\n  };\n\n  saveTeamMembers = () => {\n    // TODO Take array of members and run POST requests to the user_teams url\n    const fetchUserTeams = this.props.fetchURL + \"/user_teams\";\n    console.log(this.state.members);\n    this.state.members.forEach(member => {\n      fetch(fetchUserTeams, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          user_id: member.id,\n          team_id: this.state.team_id\n        })\n      })\n        .then(res => res.json())\n        .then(newMember => console.log(newMember))\n        .catch(err => console.log(err));\n    });\n  };\n\n  addATeam = (e, team) => {\n    const fetchTeams = this.props.fetchURL + \"/teams\";\n    const { allTeams } = this.props;\n    this.setState({\n      team_name: team.teamNameInput,\n      location: team.locationInput\n    });\n\n    // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n    fetch(fetchTeams, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        team_name: team.teamNameInput\n      })\n    })\n      .then(res => res.json())\n      //   .then(team => this.setState({ team_id: team.id }))\n      .then(team => {\n        this.props.getCurrentTeam(team)\n        console.log(team)\n      })\n      .catch(err => console.log(err));\n  };\n\n  addMember = (e, member) => {\n    const memberCheck = this.state.members.includes(member);\n    if (!memberCheck) {\n      this.setState({ members: [...this.state.members, member] });\n    }\n  };\n\n  removeMember = (e, member) => {\n    const newMemberArray = [];\n    this.state.members.forEach(user => {\n      if (user !== member) {\n        newMemberArray.push(user);\n      }\n    });\n    this.setState({ members: newMemberArray });\n  };\n\n  handleChange = (e, value) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    const { allUsers, currentUser } = this.props;\n    const { searchInput, members, team_name, location } = this.state;\n    const filteredUsers = searchInput\n      ? allUsers.filter(user => user.username.includes(searchInput))\n      : null;\n    // console.log(currentUser);\n    return (\n      <div>\n        <TeamForm currentUser={currentUser} addATeam={this.addATeam} />\n        <MemberList\n          currentUser={currentUser}\n          members={members}\n          removeMember={this.removeMember}\n          team_name={team_name}\n          location={location}\n        />\n        <MemberForm\n          handleChange={this.handleChange}\n          saveTeamMembers={this.saveTeamMembers}\n        />\n        <TeamSearch addMember={this.addMember} filteredUsers={filteredUsers} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}