{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/roulette/RouletteForm.js\";\nimport React, { Component } from \"react\";\nimport { Dropdown, Button, Form } from \"semantic-ui-react\";\nimport categoryData from \"../categoryData\";\nimport cityData from \"../cityData\";\nexport default class RouletteForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locationInput: \"\",\n      categoryInput: \"\"\n    };\n\n    this.handleDropdown = (e, data) => {\n      const targetValue = data.value;\n      const targetName = data.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          updateState = _this$props.updateState,\n          handleDropdown = _this$props.handleDropdown,\n          handleSpin = _this$props.handleSpin; // console.log(this.state)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Form, {\n      centered: true,\n      onSubmit: e => handleSpin(e, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      centered: true,\n      color: \"teal\",\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Dropdown.Header, {\n      as: \"h1\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Select Category\"), React.createElement(Dropdown, {\n      floating: true,\n      search: true,\n      labeled: true,\n      onChange: this.handleDropdown,\n      name: \"categoryInput\",\n      placeholder: \"Select Category\",\n      fluid: true,\n      selection: true,\n      options: categoryData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Dropdown.Header, {\n      as: \"h1\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Select City\"), React.createElement(Dropdown, {\n      floating: true,\n      search: true,\n      labeled: true,\n      onChange: this.handleDropdown,\n      name: \"locationInput\",\n      placeholder: \"Select City\",\n      fluid: true,\n      selection: true,\n      options: cityData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      control: Button,\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"SPIN DAT ISH\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/roulette/RouletteForm.js"],"names":["React","Component","Dropdown","Button","Form","categoryData","cityData","RouletteForm","state","locationInput","categoryInput","handleDropdown","e","data","targetValue","value","targetName","name","setState","render","props","updateState","handleSpin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,IAA3B,QAAuC,mBAAvC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDO,KADkD,GAC1C;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,aAAa,EAAE;AAFT,KAD0C;;AAAA,SAMlDC,cANkD,GAMjC,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5B,YAAMC,WAAW,GAAGD,IAAI,CAACE,KAAzB;AACA,YAAMC,UAAU,GAAGH,IAAI,CAACI,IAAxB;AACA,WAAKC,QAAL,CAAc;AAAE,SAACF,UAAD,GAAcF;AAAhB,OAAd;AACD,KAViD;AAAA;;AAYlDK,EAAAA,MAAM,GAAG;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcV,cADd,eACcA,cADd;AAAA,UAC8BW,UAD9B,eAC8BA,UAD9B,EAEP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,EAAEV,CAAC,IAAIU,UAAU,CAACV,CAAD,EAAI,KAAKJ,KAAT,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAyB,MAAA,QAAQ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAIE,oBAAC,QAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,QAAQ,EAAE,KAAKG,cAJjB;AAKE,MAAA,IAAI,EAAC,eALP;AAME,MAAA,WAAW,EAAC,iBANd;AAOE,MAAA,KAAK,MAPP;AAQE,MAAA,SAAS,MARX;AASE,MAAA,OAAO,EAAEN,YATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAeE,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAyB,MAAA,QAAQ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfF,EAkBE,oBAAC,QAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,QAAQ,EAAE,KAAKM,cAJjB;AAKE,MAAA,IAAI,EAAC,eALP;AAME,MAAA,WAAW,EAAC,aANd;AAOE,MAAA,KAAK,MAPP;AAQE,MAAA,SAAS,MARX;AASE,MAAA,OAAO,EAAEL,QATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF,EA+BE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAEH,MAArB;AAA6B,MAAA,OAAO,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/BF,CADF,CADF,CADF;AAyCD;;AAxDiD","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Button, Form } from \"semantic-ui-react\";\nimport categoryData from \"../categoryData\";\nimport cityData from \"../cityData\";\n\nexport default class RouletteForm extends Component {\n  state = {\n    locationInput: \"\",\n    categoryInput: \"\"\n  };\n\n  handleDropdown = (e, data) => {\n    const targetValue = data.value;\n    const targetName = data.name;\n    this.setState({ [targetName]: targetValue });\n  };\n\n  render() {\n    const { updateState, handleDropdown, handleSpin } = this.props;\n    // console.log(this.state)\n    return (\n      <div>\n        <Form centered onSubmit={e => handleSpin(e, this.state)}>\n          <Form.Group centered color=\"teal\" widths=\"equal\">\n            <Form.Field>\n              <Dropdown.Header as=\"h1\" inverted>\n                Select Category\n              </Dropdown.Header>\n              <Dropdown\n                floating\n                search\n                labeled\n                onChange={this.handleDropdown}\n                name=\"categoryInput\"\n                placeholder=\"Select Category\"\n                fluid\n                selection\n                options={categoryData}\n              />\n              <Dropdown.Header as=\"h1\" inverted>\n                Select City\n              </Dropdown.Header>\n              <Dropdown\n                floating\n                search\n                labeled\n                onChange={this.handleDropdown}\n                name=\"locationInput\"\n                placeholder=\"Select City\"\n                fluid\n                selection\n                options={cityData}\n              />\n            </Form.Field>\n            <Form.Field control={Button} primary>\n              SPIN DAT ISH\n            </Form.Field>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}