{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\nimport LoginForm from \"./login/LoginForm\";\nimport { Search } from \"semantic-ui-react\";\nimport NewUserForm from \"./login/NewUserForm\";\nimport { Route, Switch } from \"react-router-dom\";\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\";\nconst fetchUserTeams = fetchURL + \"/user_teams\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      // JSON please log in\n      currentUserId: 9,\n      // update this to backend\n      yelpResults: [],\n      currentTeam: {},\n      showTeamContainer: true\n    };\n\n    this.fetchYelp = (location, term) => {\n      const querySearch = queryURL;\n      fetch(querySearch, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          term: term,\n          location: location\n        })\n      }).then(res => res.json()).then(data => this.setState({\n        yelpResults: data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      fetch(fetchUsers, {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer <token>\"\n        }\n      }).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchTeams = () => {\n      fetch(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      })).catch(err => console.log(err));\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n\n    this.selectContainer = e => {\n      this.setState({\n        showTeamContainer: !this.state.showTeamContainer\n      });\n    };\n\n    this.getUserId = userid => {\n      this.setState({\n        currentUserId: userid\n      });\n    };\n  }\n\n  componentDidMount() {// this.fetchUsers();\n    // this.fetchTeams();\n  }\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentUserId = _this$state.currentUserId,\n          currentTeam = _this$state.currentTeam,\n          showTeamContainer = _this$state.showTeamContainer,\n          yelpResults = _this$state.yelpResults;\n    const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n    console.log(this.state); // return allUsers.length > 0 ? (\n\n    return allUsers.length > 0 ? React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        getUserId: this.getUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newteam\",\n      render: () => React.createElement(TeamContainer, {\n        allUsers: allUsers,\n        allTeams: allTeams,\n        currentUser: currentUser,\n        fetchURL: fetchURL,\n        getCurrentTeam: this.getCurrentTeam,\n        currentTeam: currentTeam,\n        selectContainer: this.selectContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/roulette\",\n      render: () => React.createElement(RouletteContainer, {\n        fetchYelp: this.fetchYelp,\n        yelpResults: yelpResults,\n        selectContainer: this.selectContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })) : \"Loading...\"; // return allUsers.length > 0 ? (\n    // <div>\n    //   {/* <ProfileContainer currentUser={currentUser}/> */}\n    //   {showTeamContainer ? (\n    //     <TeamContainer\n    //       allUsers={allUsers}\n    //       allTeams={allTeams}\n    //       currentUser={currentUser}\n    //       fetchURL={fetchURL}\n    //       getCurrentTeam={this.getCurrentTeam}\n    //       currentTeam={currentTeam}\n    //       selectContainer={this.selectContainer}\n    //     />\n    // ) : (\n    // <RouletteContainer\n    //   fetchYelp={this.fetchYelp}\n    //   yelpResults={yelpResults}\n    //   selectContainer={this.selectContainer}\n    // />\n    //     )}\n    //   </div>\n    // ) : (\n    //   <div>Loading...</div>\n    // )\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","ProfileContainer","TeamContainer","RouletteContainer","LoginContainer","LoginForm","Search","NewUserForm","Route","Switch","queryURL","fetchURL","fetchUsers","fetchTeams","fetchUserTeams","App","state","allUsers","allTeams","currentUserId","yelpResults","currentTeam","showTeamContainer","fetchYelp","location","term","querySearch","fetch","method","headers","accept","body","JSON","stringify","then","res","json","data","setState","results","catch","err","console","log","Authorization","users","teams","getCurrentTeam","newTeamObj","selectContainer","e","getUserId","userid","componentDidMount","render","currentUser","length","find","user","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\nimport LoginForm from \"./login/LoginForm\";\nimport { Search } from \"semantic-ui-react\";\nimport NewUserForm from \"./login/NewUserForm\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\";\nconst fetchUserTeams = fetchURL + \"/user_teams\";\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [], // JSON please log in\n    currentUserId: 9, // update this to backend\n    yelpResults: [],\n    currentTeam: {},\n    showTeamContainer: true\n  };\n\n  componentDidMount() {\n    // this.fetchUsers();\n    // this.fetchTeams();\n  }\n\n  fetchYelp = (location, term) => {\n    const querySearch = queryURL;\n    fetch(querySearch, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        term: term,\n        location: location\n      })\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ yelpResults: data.results }))\n      .catch(err => console.log(err));\n  };\n\n  fetchUsers = () => {\n    fetch(fetchUsers, {\n      method: 'GET', \n      headers: {\n        Authorization: `Bearer <token>`\n      }\n    })\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n      .catch(err => console.log(err))\n  };\n\n  fetchTeams = () => {\n    fetch(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n      .catch(err => console.log(err))\n  };\n\n  getCurrentTeam = newTeamObj => {\n    this.setState({ currentTeam: newTeamObj });\n  };\n\n  selectContainer = e => {\n    this.setState({ showTeamContainer: !this.state.showTeamContainer });\n  };\n\n  // set state of current user ID after the login is successful\n  getUserId = userid => {\n    this.setState({ currentUserId: userid });\n  };\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      currentUserId,\n      currentTeam,\n      showTeamContainer,\n      yelpResults\n    } = this.state;\n    const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n    console.log(this.state);\n\n    // return allUsers.length > 0 ? (\n    return allUsers.length > 0 ? (\n      <div className=\"login-container\">\n\n        <Route\n          path=\"/login\"\n          render={() => <LoginForm getUserId={this.getUserId} />}\n        />\n        <Route\n          path=\"/newteam\"\n          render={() => (\n            <TeamContainer\n              allUsers={allUsers}\n              allTeams={allTeams}\n              currentUser={currentUser}\n              fetchURL={fetchURL}\n              getCurrentTeam={this.getCurrentTeam}\n              currentTeam={currentTeam}\n              selectContainer={this.selectContainer}\n            />\n          )}\n        />\n        <Route\n          path=\"/roulette\"\n          render={() => (\n            <RouletteContainer\n              fetchYelp={this.fetchYelp}\n              yelpResults={yelpResults}\n              selectContainer={this.selectContainer}\n            />\n          )}\n        />\n      </div> \n    ) : \"Loading...\" \n\n    // return allUsers.length > 0 ? (\n    // <div>\n    //   {/* <ProfileContainer currentUser={currentUser}/> */}\n    //   {showTeamContainer ? (\n    //     <TeamContainer\n    //       allUsers={allUsers}\n    //       allTeams={allTeams}\n    //       currentUser={currentUser}\n    //       fetchURL={fetchURL}\n    //       getCurrentTeam={this.getCurrentTeam}\n    //       currentTeam={currentTeam}\n    //       selectContainer={this.selectContainer}\n    //     />\n    // ) : (\n    // <RouletteContainer\n    //   fetchYelp={this.fetchYelp}\n    //   yelpResults={yelpResults}\n    //   selectContainer={this.selectContainer}\n    // />\n    //     )}\n    //   </div>\n    // ) : (\n    //   <div>Loading...</div>\n    // )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}