{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginForm from \"./login/LoginForm\";\nimport NewUserForm from \"./login/NewUserForm\";\nimport NavBar from \"./NavBar\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport ResultPage from \"./result/ResultPage\";\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\";\nconst styleApp = {\n  // backgroundColor: 'navy',\n  color: 'white',\n  textAlign: 'center' // margin: '20px'\n\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      // JSON please log in\n      currentUserId: 0,\n      // update this to backend\n      currentUser: {},\n      yelpResults: [],\n      currentTeam: {\n        team_name: 'Bebe' // testObj\n\n      },\n      loggedIn: false,\n      result: {\n        // testObj\n        name: \"Four Coffees\",\n        location: {\n          display_address: \"somewhere cool\"\n        },\n        display_phone: '248-867-5309'\n      }\n    };\n\n    this.fetchCurrentUser = () => {\n      fetch(fetchURL + \"/finduser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          token: localStorage.token\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.user) {\n          this.getUser(data.user);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.fetchYelp = (location, term) => {\n      const querySearch = queryURL;\n      fetch(querySearch, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          term: term,\n          location: location\n        })\n      }).then(res => res.json()).then(data => this.setState({\n        yelpResults: data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      this.fetchAuthToken(fetchUsers).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchTeams = () => {\n      this.fetchAuthToken(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchAuthToken = url => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      });\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n\n    this.logOut = () => {\n      localStorage.clear();\n      this.setState({\n        loggedIn: false\n      });\n      console.log(\"logged out\");\n    };\n\n    this.getUser = user => {\n      this.setState({\n        currentUser: user,\n        loggedIn: true\n      });\n    };\n\n    this.setResult = resultObj => {\n      this.setState({\n        result: resultObj\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser();\n    this.fetchUsers();\n    this.fetchTeams();\n    console.log('app');\n  }\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentTeam = _this$state.currentTeam,\n          currentUser = _this$state.currentUser,\n          loggedIn = _this$state.loggedIn,\n          yelpResults = _this$state.yelpResults,\n          result = _this$state.result; // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n\n    const tokenCheck = localStorage.token ? true : false;\n    const teamError = Object.keys(currentTeam).includes(\"errors\");\n    console.log(teamError);\n    console.log(tokenCheck, loggedIn);\n    console.log(this.state); // return allUsers.length > 0 ? (\n\n    return true ? React.createElement(\"div\", {\n      style: styleApp,\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      loggedIn: loggedIn,\n      user: currentUser,\n      logout: this.logout,\n      teamName: currentTeam.team_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }) : React.createElement(LoginForm, {\n        getUser: this.getUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/createaccount\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }) : React.createElement(NewUserForm, {\n        getUser: this.getUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newteam\",\n      render: () => loggedIn ? React.createElement(TeamContainer, {\n        allUsers: allUsers,\n        allTeams: allTeams,\n        currentUser: currentUser,\n        fetchURL: fetchURL,\n        getCurrentTeam: this.getCurrentTeam,\n        currentTeam: currentTeam,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        teamError: teamError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/roulette\",\n      render: () => loggedIn ? React.createElement(RouletteContainer, {\n        fetchYelp: this.fetchYelp,\n        yelpResults: yelpResults,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        setResult: this.setResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/result\",\n      render: () => // loggedIn ? (\n      React.createElement(ResultPage, {\n        result: result,\n        currentTeam: currentTeam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }) // ) : (\n      // <Redirect to='/login' />\n      // )\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","TeamContainer","RouletteContainer","LoginForm","NewUserForm","NavBar","BrowserRouter","Router","Route","Link","Redirect","ResultPage","queryURL","fetchURL","fetchUsers","fetchTeams","styleApp","color","textAlign","App","state","allUsers","allTeams","currentUserId","currentUser","yelpResults","currentTeam","team_name","loggedIn","result","name","location","display_address","display_phone","fetchCurrentUser","fetch","method","headers","Accept","Authorization","localStorage","token","body","JSON","stringify","then","res","json","data","user","getUser","catch","err","console","log","fetchYelp","term","querySearch","accept","setState","results","fetchAuthToken","users","teams","url","getCurrentTeam","newTeamObj","logOut","clear","setResult","resultObj","componentDidMount","render","tokenCheck","teamError","Object","keys","includes","logout","selectContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,IAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,QAAQ,GAAG,uBAAjB,C,CAAyC;;AACzC,MAAMC,UAAU,GAAGD,QAAQ,GAAG,QAA9B;AACA,MAAME,UAAU,GAAGF,QAAQ,GAAG,QAA9B;AAEA,MAAMG,QAAQ,GAAG;AACf;AACAC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,SAAS,EAAE,QAHI,CAIf;;AAJe,CAAjB;;AAOA,MAAMC,GAAN,SAAkBnB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BoB,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAEQ;AACdC,MAAAA,aAAa,EAAE,CAHT;AAGY;AAClBC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE,MADA,CACO;;AADP,OANP;AASNC,MAAAA,QAAQ,EAAE,KATJ;AAUNC,MAAAA,MAAM,EAAE;AAAE;AACRC,QAAAA,IAAI,EAAE,cADA;AAENC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,eAAe,EAAE;AADT,SAFJ;AAKNC,QAAAA,aAAa,EAAE;AALT;AAVF,KADkB;;AAAA,SA2B1BC,gBA3B0B,GA2BP,MAAM;AACvBC,MAAAA,KAAK,CAACtB,QAAQ,GAAG,WAAZ,EAAyB;AAC5BuB,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE,kBAFD;AAGPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN,SAFmB;AAO5BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,UAAAA,KAAK,EAAED,YAAY,CAACC;AAAtB,SAAf;AAPsB,OAAzB,CAAL,CASGI,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,IAAT,EAAe;AACb,eAAKC,OAAL,CAAaF,IAAI,CAACC,IAAlB;AACD;AACF,OAdH,EAeGE,KAfH,CAeSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfhB;AAgBD,KA5CyB;;AAAA,SA8C1BG,SA9C0B,GA8Cd,CAACxB,QAAD,EAAWyB,IAAX,KAAoB;AAC9B,YAAMC,WAAW,GAAG7C,QAApB;AACAuB,MAAAA,KAAK,CAACsB,WAAD,EAAc;AACjBrB,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE,kBAFD;AAGPnB,UAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AAHN,SAFQ;AAOjBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBY,UAAAA,IAAI,EAAEA,IADa;AAEnBzB,UAAAA,QAAQ,EAAEA;AAFS,SAAf;AAPW,OAAd,CAAL,CAYGc,IAZH,CAYQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZf,EAaGF,IAbH,CAaQG,IAAI,IAAI,KAAKW,QAAL,CAAc;AAAElC,QAAAA,WAAW,EAAEuB,IAAI,CAACY;AAApB,OAAd,CAbhB,EAcGT,KAdH,CAcSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdhB;AAeD,KA/DyB;;AAAA,SAiE1BtC,UAjE0B,GAiEb,MAAM;AACjB,WAAK+C,cAAL,CAAoB/C,UAApB,EACG+B,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQiB,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEtC,QAAAA,QAAQ,EAAEyC;AAAZ,OAAd,CAFjB,EAGGX,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAID,KAtEyB;;AAAA,SAwE1BrC,UAxE0B,GAwEb,MAAM;AACjB,WAAK8C,cAAL,CAAoB9C,UAApB,EACG8B,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQkB,KAAK,IAAI,KAAKJ,QAAL,CAAc;AAAErC,QAAAA,QAAQ,EAAEyC;AAAZ,OAAd,CAFjB,EAGGZ,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAID,KA7EyB;;AAAA,SA+E1BS,cA/E0B,GA+ETG,GAAG,IAAI;AACtB,aAAO7B,KAAK,CAAC6B,GAAD,EAAM;AAChB5B,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACPE,UAAAA,aAAa,mBAAYC,YAAY,CAACC,KAAzB;AADN;AAFO,OAAN,CAAZ;AAMD,KAtFyB;;AAAA,SAuF1BwB,cAvF0B,GAuFTC,UAAU,IAAI;AAC7B,WAAKP,QAAL,CAAc;AAAEjC,QAAAA,WAAW,EAAEwC;AAAf,OAAd;AACD,KAzFyB;;AAAA,SA0F1BC,MA1F0B,GA0FjB,MAAM;AACb3B,MAAAA,YAAY,CAAC4B,KAAb;AACA,WAAKT,QAAL,CAAc;AAAE/B,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KA9FyB;;AAAA,SAgG1BJ,OAhG0B,GAgGhBD,IAAI,IAAI;AAChB,WAAKU,QAAL,CAAc;AAAEnC,QAAAA,WAAW,EAAEyB,IAAf;AAAqBrB,QAAAA,QAAQ,EAAE;AAA/B,OAAd;AACD,KAlGyB;;AAAA,SAoG1ByC,SApG0B,GAoGdC,SAAS,IAAI;AACvB,WAAKX,QAAL,CAAc;AAAC9B,QAAAA,MAAM,EAAEyC;AAAT,OAAd;AACD,KAtGyB;AAAA;;AAoB1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKrC,gBAAL;AACA,SAAKpB,UAAL;AACA,SAAKC,UAAL;AACAsC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;;AA+EDkB,EAAAA,MAAM,GAAG;AAAA,wBAUH,KAAKpD,KAVF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAKLI,WALK,eAKLA,WALK;AAAA,UAMLF,WANK,eAMLA,WANK;AAAA,UAOLI,QAPK,eAOLA,QAPK;AAAA,UAQLH,WARK,eAQLA,WARK;AAAA,UASLI,MATK,eASLA,MATK,EAWP;;AACA,UAAM4C,UAAU,GAAGjC,YAAY,CAACC,KAAb,GAAqB,IAArB,GAA4B,KAA/C;AACA,UAAMiC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYlD,WAAZ,EAAyBmD,QAAzB,CAAkC,QAAlC,CAAlB;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAZ;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ,EAAwB7C,QAAxB;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAjB,EAhBO,CAkBP;;AACA,WAAO,OACL;AAAK,MAAA,KAAK,EAAEJ,QAAZ;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEY,QAAlB;AAA4B,MAAA,IAAI,EAAEJ,WAAlC;AAA+C,MAAA,MAAM,EAAE,KAAKsD,MAA5D;AAAoE,MAAA,QAAQ,EAAEpD,WAAW,CAACC,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,MAAM,EAAE,MACNC,QAAQ,GACN,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAGN,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKsB,OADhB;AAEE,QAAA,UAAU,EAAE,KAAKpC,UAFnB;AAGE,QAAA,UAAU,EAAE,KAAKC,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAqBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,MAAM,EAAE,MACNa,QAAQ,GACN,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAGN,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKsB,OADhB;AAEE,QAAA,UAAU,EAAE,KAAKpC,UAFnB;AAGE,QAAA,UAAU,EAAE,KAAKC,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAmCE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,MAAM,EAAE,MACNa,QAAQ,GACN,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAEP,QADZ;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,WAAW,EAAEE,WAHf;AAIE,QAAA,QAAQ,EAAEX,QAJZ;AAKE,QAAA,cAAc,EAAE,KAAKoD,cALvB;AAME,QAAA,WAAW,EAAEvC,WANf;AAOE,QAAA,eAAe,EAAE,KAAKqD,eAPxB;AAQE,QAAA,gBAAgB,EAAE,KAAK7C,gBARzB;AASE,QAAA,UAAU,EAAE,KAAKpB,UATnB;AAUE,QAAA,UAAU,EAAE,KAAKC,UAVnB;AAWE,QAAA,SAAS,EAAE2D,SAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAeN,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAyDE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,MAAM,EAAE,MACN9C,QAAQ,GACN,oBAAC,iBAAD;AACE,QAAA,SAAS,EAAE,KAAK2B,SADlB;AAEE,QAAA,WAAW,EAAE9B,WAFf;AAGE,QAAA,eAAe,EAAE,KAAKsD,eAHxB;AAIE,QAAA,gBAAgB,EAAE,KAAK7C,gBAJzB;AAKE,QAAA,UAAU,EAAE,KAAKpB,UALnB;AAME,QAAA,UAAU,EAAE,KAAKC,UANnB;AAOE,QAAA,SAAS,EAAE,KAAKsD,SAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAWN,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,EA2EE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,MAAM,EAAE,MACN;AACE,0BAAC,UAAD;AACE,QAAA,MAAM,EAAExC,MADV;AAEE,QAAA,WAAW,EAAEH,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CAMJ;AACE;AACF;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3EF,CADF,CADK,GA6FL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7FF;AA+FD;;AA1NyB;;AA6N5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\nimport TeamContainer from \"./team/TeamContainer\"\nimport RouletteContainer from \"./roulette/RouletteContainer\"\nimport LoginForm from \"./login/LoginForm\"\nimport NewUserForm from \"./login/NewUserForm\"\nimport NavBar from \"./NavBar\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\"\nimport ResultPage from \"./result/ResultPage\"\n\nconst queryURL = \"http://localhost:3000/search\"\nconst fetchURL = \"http://localhost:3000\" // Host\nconst fetchUsers = fetchURL + \"/users\"\nconst fetchTeams = fetchURL + \"/teams\"\n\nconst styleApp = {\n  // backgroundColor: 'navy',\n  color: 'white',\n  textAlign: 'center'\n  // margin: '20px'\n}\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [], // JSON please log in\n    currentUserId: 0, // update this to backend\n    currentUser: {},\n    yelpResults: [],\n    currentTeam: {\n      team_name: 'Bebe' // testObj\n    },\n    loggedIn: false,\n    result: { // testObj\n      name: \"Four Coffees\",\n      location: {\n        display_address: \"somewhere cool\"\n      },\n      display_phone: '248-867-5309'\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser()\n    this.fetchUsers()\n    this.fetchTeams()\n    console.log('app')\n  }\n\n  fetchCurrentUser = () => {\n    fetch(fetchURL + \"/finduser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({ token: localStorage.token })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.user) {\n          this.getUser(data.user)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  fetchYelp = (location, term) => {\n    const querySearch = queryURL\n    fetch(querySearch, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        term: term,\n        location: location\n      })\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ yelpResults: data.results }))\n      .catch(err => console.log(err))\n  }\n\n  fetchUsers = () => {\n    this.fetchAuthToken(fetchUsers)\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n      .catch(err => console.log(err))\n  }\n\n  fetchTeams = () => {\n    this.fetchAuthToken(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n      .catch(err => console.log(err))\n  }\n\n  fetchAuthToken = url => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n  }\n  getCurrentTeam = newTeamObj => {\n    this.setState({ currentTeam: newTeamObj })\n  }\n  logOut = () => {\n    localStorage.clear()\n    this.setState({ loggedIn: false })\n    console.log(\"logged out\")\n  }\n\n  getUser = user => {\n    this.setState({ currentUser: user, loggedIn: true })\n  }\n\n  setResult = resultObj => {\n    this.setState({result: resultObj})\n  }\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      // currentUserId,\n      currentTeam,\n      currentUser,\n      loggedIn,\n      yelpResults,\n      result\n    } = this.state\n    // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n    const tokenCheck = localStorage.token ? true : false\n    const teamError = Object.keys(currentTeam).includes(\"errors\")\n    console.log(teamError)\n    console.log(tokenCheck, loggedIn)\n    console.log(this.state)\n\n    // return allUsers.length > 0 ? (\n    return true ? (\n      <div style={styleApp} className=\"login-container\">\n        <Router>\n          {/* {loggedIn ? (\n            <Link to=\"/login\" onClick={this.logOut}>\n              Log Out\n            </Link>\n          ) : null} */}\n          <NavBar loggedIn={loggedIn} user={currentUser} logout={this.logout} teamName={currentTeam.team_name}/>\n          <Route\n            path=\"/login\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/newteam\" />\n              ) : (\n                <LoginForm\n                  getUser={this.getUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/createaccount\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/newteam\" />\n              ) : (\n                <NewUserForm\n                  getUser={this.getUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/newteam\"\n            render={() =>\n              loggedIn ? (\n                <TeamContainer\n                  allUsers={allUsers}\n                  allTeams={allTeams}\n                  currentUser={currentUser}\n                  fetchURL={fetchURL}\n                  getCurrentTeam={this.getCurrentTeam}\n                  currentTeam={currentTeam}\n                  selectContainer={this.selectContainer}\n                  fetchCurrentUser={this.fetchCurrentUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                  teamError={teamError}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path=\"/roulette\"\n            render={() =>\n              loggedIn ? (\n                <RouletteContainer\n                  fetchYelp={this.fetchYelp}\n                  yelpResults={yelpResults}\n                  selectContainer={this.selectContainer}\n                  fetchCurrentUser={this.fetchCurrentUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                  setResult={this.setResult}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route \n            path='/result'\n            render={() => \n              // loggedIn ? (\n                <ResultPage \n                  result={result}\n                  currentTeam={currentTeam}\n                />\n              // ) : (\n                // <Redirect to='/login' />\n              // )\n            }\n          />\n        </Router>\n      </div>\n    ) : (\n      <div>Loading...</div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}