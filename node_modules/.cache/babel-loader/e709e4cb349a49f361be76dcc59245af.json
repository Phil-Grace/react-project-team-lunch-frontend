{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nconst styleImage = {\n  width: '200px',\n  height: '200px'\n};\nexport default class RouletteCard extends Component {\n  render() {\n    const _this$props = this.props,\n          yelpResults = _this$props.yelpResults,\n          indexArray = _this$props.indexArray,\n          randomYelp = _this$props.randomYelp,\n          setResult = _this$props.setResult;\n    console.log(yelpResults); // TODO Need failsafe for bad yelp call\n\n    let result = yelpResults.length > 0 ? yelpResults[indexArray[indexArray.length - 1]] : null;\n    return yelpResults.length > 0 ? React.createElement(\"div\", {\n      className: \"roulette-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: result.image_url,\n      style: styleImage,\n      wrapped: true,\n      ui: false,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, result.name), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, result.location.display_address), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, result.display_phone), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, result.rating, \" stars\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, result.price ? \"Price: \".concat(result.price) : null), React.createElement(\"a\", {\n      href: result.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"View on Yelp\")), indexArray.length === 3 ? React.createElement(Button, {\n      onClick: () => randomYelp(indexArray),\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"LAST SPIN!\") : indexArray.length > 3 ? null : React.createElement(Button, {\n      onClick: () => randomYelp(indexArray),\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, 4 - indexArray.length, \" Spins Remaining\"), React.createElement(Button, {\n      as: Link,\n      name: \"result\",\n      to: \"result\",\n      onClick: () => setResult(result),\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"OK\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Loading....\");\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js"],"names":["React","Component","Card","Image","Button","Link","styleImage","width","height","RouletteCard","render","props","yelpResults","indexArray","randomYelp","setResult","console","log","result","length","textAlign","image_url","name","location","display_address","display_phone","rating","price","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Card, Image, Button } from \"semantic-ui-react\"\nimport { Link } from 'react-router-dom'\nconst styleImage = {\n  width: '200px',\n  height: '200px'\n}\nexport default class RouletteCard extends Component {\n  render() {\n    const { yelpResults, indexArray, randomYelp, setResult } = this.props\n    console.log(yelpResults)\n    // TODO Need failsafe for bad yelp call\n    let result =\n      yelpResults.length > 0\n        ? yelpResults[indexArray[indexArray.length - 1]]\n        : null\n\n    return yelpResults.length > 0 ? (\n      <div className=\"roulette-card\">\n        <Card style={{textAlign: 'center'}}>\n          <Image src={result.image_url} style={styleImage} wrapped ui={false} size=\"medium\" />\n          <Card.Content>\n            <Card.Header>{result.name}</Card.Header>\n            <Card.Description>\n              {result.location.display_address}\n            </Card.Description>\n            <Card.Description>{result.display_phone}</Card.Description>\n            <Card.Description>{result.rating} stars</Card.Description>\n            <Card.Description>\n              {result.price ? `Price: ${result.price}` : null}\n            </Card.Description>\n            <a href={result.url}>View on Yelp</a>\n          </Card.Content>\n          {indexArray.length === 3 ? (\n            <Button onClick={() => randomYelp(indexArray)} primary>\n              LAST SPIN!\n            </Button>\n          ) : indexArray.length > 3 ? null : (\n            <Button onClick={() => randomYelp(indexArray)} primary>\n              {4 - indexArray.length} Spins Remaining\n            </Button>\n          )}\n          <Button as={Link} name='result' to='result' onClick={() => setResult(result)} primary>\n            OK\n          </Button>\n        </Card>\n      </div>\n    ) : (\n      <div>Loading....</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}