{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport MemberContainer from \"./MemberContainer\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: \"\",\n      location: \"\",\n      searchInput: \"\",\n      members: [],\n      showTeamForm: true\n    };\n\n    this.saveTeamMembers = () => {\n      // TODO Take array of members and run POST requests to the user_teams url\n      const fetchUserTeams = this.props.fetchURL + \"/user_teams\"; // console.log(this.state.members)\n\n      this.state.members.forEach(member => {\n        fetch(fetchUserTeams, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: member.id,\n            team_id: this.props.currentTeam.id\n          })\n        }).then(res => res.json()).then(newMember => console.log(newMember)).catch(err => console.log(err));\n      });\n      this.setState({\n        showTeamForm: !this.state.showTeamForm\n      });\n      this.props.selectContainer();\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      const allTeams = this.props.allTeams;\n      this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput,\n        showTeamForm: !this.state.showTeamForm\n      }); // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()) //   .then(team => this.setState({ team_id: team.id }))\n      .then(team => this.props.getCurrentTeam(team)).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members,\n          team_name = _this$state.team_name,\n          location = _this$state.location,\n          showTeamForm = _this$state.showTeamForm;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null; // console.log(currentUser);\n\n    return React.createElement(\"div\", {\n      className: \"team-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, showTeamForm ? React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : React.createElement(MemberContainer, {\n      currentUser: currentUser,\n      members: members,\n      removeMember: this.removeMember,\n      team_name: team_name,\n      location: location,\n      handleChange: this.handleChange,\n      saveTeamMembers: this.saveTeamMembers,\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","MemberContainer","TeamContainer","state","team_name","location","searchInput","members","showTeamForm","saveTeamMembers","fetchUserTeams","props","fetchURL","forEach","member","fetch","method","headers","body","JSON","stringify","user_id","id","team_id","currentTeam","then","res","json","newMember","console","log","catch","err","setState","selectContainer","addATeam","e","team","fetchTeams","allTeams","teamNameInput","locationInput","getCurrentTeam","addMember","memberCheck","includes","removeMember","newMemberArray","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport TeamForm from \"./TeamForm\"\nimport MemberContainer from \"./MemberContainer\"\n\nexport default class TeamContainer extends Component {\n  state = {\n    team_name: \"\",\n    location: \"\",\n    searchInput: \"\",\n    members: [],\n    showTeamForm: true\n  }\n\n  saveTeamMembers = () => {\n    // TODO Take array of members and run POST requests to the user_teams url\n    const fetchUserTeams = this.props.fetchURL + \"/user_teams\"\n    // console.log(this.state.members)\n    this.state.members.forEach(member => {\n      fetch(fetchUserTeams, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          user_id: member.id,\n          team_id: this.props.currentTeam.id\n        })\n      })\n        .then(res => res.json())\n        .then(newMember => console.log(newMember))\n        .catch(err => console.log(err))\n    })\n    this.setState({showTeamForm: !this.state.showTeamForm})\n    this.props.selectContainer()\n  }\n\n  addATeam = (e, team) => {\n    const fetchTeams = this.props.fetchURL + \"/teams\"\n    const { allTeams } = this.props\n    this.setState({\n      team_name: team.teamNameInput,\n      location: team.locationInput,\n      showTeamForm: !this.state.showTeamForm\n    })\n\n    // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n    fetch(fetchTeams, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        team_name: team.teamNameInput\n      })\n    })\n      .then(res => res.json())\n      //   .then(team => this.setState({ team_id: team.id }))\n      .then(team => this.props.getCurrentTeam(team))\n      .catch(err => console.log(err))\n  }\n\n  addMember = (e, member) => {\n    const memberCheck = this.state.members.includes(member)\n    if (!memberCheck) {\n      this.setState({ members: [...this.state.members, member] })\n    }\n  }\n\n  removeMember = (e, member) => {\n    const newMemberArray = []\n    this.state.members.forEach(user => {\n      if (user !== member) {\n        newMemberArray.push(user)\n      }\n    })\n    this.setState({ members: newMemberArray })\n  }\n\n  handleChange = (e, value) => {\n    this.setState({ searchInput: value })\n  }\n\n  render() {\n    const { allUsers, currentUser } = this.props\n    const {\n      searchInput,\n      members,\n      team_name,\n      location,\n      showTeamForm\n    } = this.state\n    const filteredUsers = searchInput\n      ? allUsers.filter(user => user.username.includes(searchInput))\n      : null\n    // console.log(currentUser);\n    return (\n      <div className=\"team-form-container\">\n        {showTeamForm ? (\n          <TeamForm currentUser={currentUser} addATeam={this.addATeam} />\n        ) : (\n          <MemberContainer\n            currentUser={currentUser}\n            members={members}\n            removeMember={this.removeMember}\n            team_name={team_name}\n            location={location}\n            handleChange={this.handleChange}\n            saveTeamMembers={this.saveTeamMembers}\n            addMember={this.addMember}\n            filteredUsers={filteredUsers}\n          />\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}