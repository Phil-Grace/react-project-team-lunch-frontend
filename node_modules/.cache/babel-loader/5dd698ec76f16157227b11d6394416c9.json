{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginForm from \"./login/LoginForm\";\nimport NewUserForm from \"./login/NewUserForm\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport ResultPage from \"./result/ResultPage\";\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\"; // const fetchUserTeams = fetchURL + \"/user_teams\"\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      // JSON please log in\n      currentUserId: 0,\n      // update this to backend\n      currentUser: {},\n      yelpResults: [],\n      currentTeam: {},\n      loggedIn: false,\n      showTeamContainer: true,\n      result: {}\n    };\n\n    this.fetchCurrentUser = () => {\n      // this.fetchAuthToken(fetchUsers)\n      fetch(fetchURL + \"/finduser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          token: localStorage.token\n        })\n      }).then(res => res.json()) // .then(console.log)\n      // .then(data => this.setState({loggedIn: true, currentUserID: data.user_id}))\n      .then(data => {\n        if (data.user) {\n          this.getUser(data.user);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.fetchYelp = (location, term) => {\n      const querySearch = queryURL;\n      fetch(querySearch, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          term: term,\n          location: location\n        })\n      }).then(res => res.json()).then(data => this.setState({\n        yelpResults: data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      this.fetchAuthToken(fetchUsers).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchTeams = () => {\n      this.fetchAuthToken(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchAuthToken = url => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      });\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n\n    this.logOut = () => {\n      localStorage.clear();\n      this.setState({\n        loggedIn: false\n      });\n      console.log(\"logged out\");\n    };\n\n    this.selectContainer = e => {\n      this.setState({\n        showTeamContainer: !this.state.showTeamContainer\n      });\n    };\n\n    this.getUser = user => {\n      this.setState({\n        currentUser: user,\n        loggedIn: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser();\n    this.fetchUsers();\n    this.fetchTeams();\n    console.log('app');\n  }\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentTeam = _this$state.currentTeam,\n          currentUser = _this$state.currentUser,\n          loggedIn = _this$state.loggedIn,\n          yelpResults = _this$state.yelpResults; // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n\n    const tokenCheck = localStorage.token ? true : false;\n    console.log(tokenCheck, loggedIn);\n    console.log(this.state); // return allUsers.length > 0 ? (\n\n    return true ? React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, loggedIn ? React.createElement(Link, {\n      to: \"/login\",\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Log Out\") : null, React.createElement(Route, {\n      path: \"/login\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }) : React.createElement(LoginForm, {\n        getUser: this.getUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/createaccount\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : React.createElement(NewUserForm, {\n        getUser: this.getUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newteam\",\n      render: () => loggedIn ? React.createElement(TeamContainer, {\n        allUsers: allUsers,\n        allTeams: allTeams,\n        currentUser: currentUser,\n        fetchURL: fetchURL,\n        getCurrentTeam: this.getCurrentTeam,\n        currentTeam: currentTeam,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/roulette\",\n      render: () => loggedIn ? React.createElement(RouletteContainer, {\n        fetchYelp: this.fetchYelp,\n        yelpResults: yelpResults,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/result\",\n      render: () => loggedIn ? React.createElement(ResultPage, {\n        result: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","TeamContainer","RouletteContainer","LoginForm","NewUserForm","BrowserRouter","Router","Route","Link","Redirect","ResultPage","queryURL","fetchURL","fetchUsers","fetchTeams","App","state","allUsers","allTeams","currentUserId","currentUser","yelpResults","currentTeam","loggedIn","showTeamContainer","result","fetchCurrentUser","fetch","method","headers","Accept","Authorization","localStorage","token","body","JSON","stringify","then","res","json","data","user","getUser","catch","err","console","log","fetchYelp","location","term","querySearch","accept","setState","results","fetchAuthToken","users","teams","url","getCurrentTeam","newTeamObj","logOut","clear","selectContainer","e","componentDidMount","render","tokenCheck"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\nimport TeamContainer from \"./team/TeamContainer\"\nimport RouletteContainer from \"./roulette/RouletteContainer\"\nimport LoginForm from \"./login/LoginForm\"\nimport NewUserForm from \"./login/NewUserForm\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\"\nimport ResultPage from \"./result/ResultPage\"\n\nconst queryURL = \"http://localhost:3000/search\"\nconst fetchURL = \"http://localhost:3000\" // Host\nconst fetchUsers = fetchURL + \"/users\"\nconst fetchTeams = fetchURL + \"/teams\"\n// const fetchUserTeams = fetchURL + \"/user_teams\"\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [], // JSON please log in\n    currentUserId: 0, // update this to backend\n    currentUser: {},\n    yelpResults: [],\n    currentTeam: {},\n    loggedIn: false,\n    showTeamContainer: true,\n    result: {}\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser()\n    this.fetchUsers()\n    this.fetchTeams()\n    console.log('app')\n  }\n\n  fetchCurrentUser = () => {\n    // this.fetchAuthToken(fetchUsers)\n    fetch(fetchURL + \"/finduser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({ token: localStorage.token })\n    })\n      .then(res => res.json())\n      // .then(console.log)\n      // .then(data => this.setState({loggedIn: true, currentUserID: data.user_id}))\n      .then(data => {\n        if (data.user) {\n          this.getUser(data.user)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  fetchYelp = (location, term) => {\n    const querySearch = queryURL\n    fetch(querySearch, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        term: term,\n        location: location\n      })\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ yelpResults: data.results }))\n      .catch(err => console.log(err))\n  }\n\n  fetchUsers = () => {\n    this.fetchAuthToken(fetchUsers)\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n      .catch(err => console.log(err))\n  }\n\n  fetchTeams = () => {\n    this.fetchAuthToken(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n      .catch(err => console.log(err))\n  }\n\n  fetchAuthToken = url => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n  }\n  getCurrentTeam = newTeamObj => {\n    this.setState({ currentTeam: newTeamObj })\n  }\n  logOut = () => {\n    localStorage.clear()\n    this.setState({ loggedIn: false })\n    console.log(\"logged out\")\n  }\n  selectContainer = e => {\n    this.setState({ showTeamContainer: !this.state.showTeamContainer })\n  }\n\n  getUser = user => {\n    this.setState({ currentUser: user, loggedIn: true })\n  }\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      // currentUserId,\n      currentTeam,\n      currentUser,\n      loggedIn,\n      // showTeamContainer,\n      yelpResults\n    } = this.state\n    // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n    const tokenCheck = localStorage.token ? true : false\n    console.log(tokenCheck, loggedIn)\n    console.log(this.state)\n\n    // return allUsers.length > 0 ? (\n    return true ? (\n      <div className=\"login-container\">\n        <Router>\n          {loggedIn ? (\n            <Link to=\"/login\" onClick={this.logOut}>\n              Log Out\n            </Link>\n          ) : null}\n          <Route\n            path=\"/login\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/newteam\" />\n              ) : (\n                <LoginForm\n                  getUser={this.getUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/createaccount\"\n            render={() =>\n              loggedIn ? (\n                <Redirect to=\"/newteam\" />\n              ) : (\n                <NewUserForm\n                  getUser={this.getUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/newteam\"\n            render={() =>\n              loggedIn ? (\n                <TeamContainer\n                  allUsers={allUsers}\n                  allTeams={allTeams}\n                  currentUser={currentUser}\n                  fetchURL={fetchURL}\n                  getCurrentTeam={this.getCurrentTeam}\n                  currentTeam={currentTeam}\n                  selectContainer={this.selectContainer}\n                  fetchCurrentUser={this.fetchCurrentUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path=\"/roulette\"\n            render={() =>\n              loggedIn ? (\n                <RouletteContainer\n                  fetchYelp={this.fetchYelp}\n                  yelpResults={yelpResults}\n                  selectContainer={this.selectContainer}\n                  fetchCurrentUser={this.fetchCurrentUser}\n                  fetchUsers={this.fetchUsers}\n                  fetchTeams={this.fetchTeams}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route \n            path='/result'\n            render={() => \n              loggedIn ? (\n                <ResultPage \n                  result={results}\n                />\n              ) : (\n                <Redirect to='/login' />\n              )\n            }\n          />\n        </Router>\n      </div>\n    ) : (\n      <div>Loading...</div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}