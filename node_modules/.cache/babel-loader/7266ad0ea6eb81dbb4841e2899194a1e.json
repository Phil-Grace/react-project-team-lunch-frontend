{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\nimport LoginForm from \"./login/LoginForm\";\nimport { Search, Button } from \"semantic-ui-react\";\nimport NewUserForm from \"./login/NewUserForm\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\";\nconst fetchUserTeams = fetchURL + \"/user_teams\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      // JSON please log in\n      // currentUserId: 9, // update this to backend\n      currentUser: {},\n      yelpResults: [],\n      currentTeam: {},\n      loggedIn: false,\n      showTeamContainer: true\n    };\n\n    this.fetchCurrentUser = () => {\n      // this.fetchAuthToken(fetchUsers)\n      fetch(fetchURL + '/finduser', {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          token: localStorage.token\n        })\n      }).then(res => res.json()).then(console.log) // .then(data => this.setState({loggedIn: true}))\n      .catch(err => console.log(err));\n    };\n\n    this.fetchYelp = (location, term) => {\n      const querySearch = queryURL;\n      fetch(querySearch, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify({\n          term: term,\n          location: location\n        })\n      }).then(res => res.json()).then(data => this.setState({\n        yelpResults: data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      this.fetchAuthToken(fetchUsers).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchTeams = () => {\n      this.fetchAuthToken(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchAuthToken = url => {\n      return fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.token)\n        }\n      });\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n\n    this.logOut = () => {\n      localStorage.clear();\n      this.setState({\n        loggedIn: false\n      });\n      console.log('logged out');\n    };\n\n    this.selectContainer = e => {\n      this.setState({\n        showTeamContainer: !this.state.showTeamContainer\n      });\n    };\n\n    this.getUser = user => {\n      this.setState({\n        currentUser: user,\n        loggedIn: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser();\n    this.fetchUsers();\n    this.fetchTeams();\n  }\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentTeam = _this$state.currentTeam,\n          currentUser = _this$state.currentUser,\n          loggedIn = _this$state.loggedIn,\n          showTeamContainer = _this$state.showTeamContainer,\n          yelpResults = _this$state.yelpResults; // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n\n    const tokenCheck = localStorage.token ? true : false;\n    console.log(tokenCheck, loggedIn);\n    console.log(this.state); // return allUsers.length > 0 ? (\n\n    return true ? React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, loggedIn ? React.createElement(Link, {\n      to: \"/login\",\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Log Out\") : null, React.createElement(Route, {\n      path: \"/login\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }) : React.createElement(LoginForm, {\n        getUser: this.getUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/createaccount\",\n      render: () => loggedIn ? React.createElement(Redirect, {\n        to: \"/newteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }) : React.createElement(NewUserForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newteam\",\n      render: () => loggedIn ? React.createElement(TeamContainer, {\n        allUsers: allUsers,\n        allTeams: allTeams,\n        currentUser: currentUser,\n        fetchURL: fetchURL,\n        getCurrentTeam: this.getCurrentTeam,\n        currentTeam: currentTeam,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/roulette\",\n      render: () => loggedIn ? React.createElement(RouletteContainer, {\n        fetchYelp: this.fetchYelp,\n        yelpResults: yelpResults,\n        selectContainer: this.selectContainer,\n        fetchCurrentUser: this.fetchCurrentUser,\n        fetchUsers: this.fetchUsers,\n        fetchTeams: this.fetchTeams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","ProfileContainer","TeamContainer","RouletteContainer","LoginContainer","LoginForm","Search","Button","NewUserForm","BrowserRouter","Router","Route","Link","Redirect","queryURL","fetchURL","fetchUsers","fetchTeams","fetchUserTeams","App","state","allUsers","allTeams","currentUser","yelpResults","currentTeam","loggedIn","showTeamContainer","fetchCurrentUser","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","then","res","json","console","log","catch","err","fetchYelp","location","term","querySearch","accept","data","setState","results","fetchAuthToken","users","teams","url","getCurrentTeam","newTeamObj","logOut","clear","selectContainer","e","getUser","user","componentDidMount","render","tokenCheck"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\nimport ProfileContainer from \"./profile/ProfileContainer\"\nimport TeamContainer from \"./team/TeamContainer\"\nimport RouletteContainer from \"./roulette/RouletteContainer\"\nimport LoginContainer from \"./login/LoginContainer\"\nimport LoginForm from \"./login/LoginForm\"\nimport { Search, Button } from \"semantic-ui-react\"\nimport NewUserForm from \"./login/NewUserForm\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\"\n\nconst queryURL = \"http://localhost:3000/search\"\nconst fetchURL = \"http://localhost:3000\" // Host\nconst fetchUsers = fetchURL + \"/users\"\nconst fetchTeams = fetchURL + \"/teams\"\nconst fetchUserTeams = fetchURL + \"/user_teams\"\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [], // JSON please log in\n    // currentUserId: 9, // update this to backend\n    currentUser: {},\n    yelpResults: [],\n    currentTeam: {},\n    loggedIn: false,\n    showTeamContainer: true\n  }\n\n  componentDidMount() {\n    this.fetchCurrentUser()\n    this.fetchUsers();\n    this.fetchTeams();\n  }\n\n  fetchCurrentUser = () => {\n    // this.fetchAuthToken(fetchUsers)\n    fetch(fetchURL + '/finduser', {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({token: localStorage.token})\n    })\n      .then(res => res.json())\n      .then(console.log)\n      // .then(data => this.setState({loggedIn: true}))\n      .catch(err => console.log(err))\n  }\n\n  fetchYelp = (location, term) => {\n    const querySearch = queryURL\n    fetch(querySearch, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        term: term,\n        location: location\n      })\n    })\n      .then(res => res.json())\n      .then(data => this.setState({ yelpResults: data.results }))\n      .catch(err => console.log(err))\n  }\n\n  fetchUsers = () => {\n    this.fetchAuthToken(fetchUsers)\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n      .catch(err => console.log(err))\n  }\n\n  fetchTeams = () => {\n    this.fetchAuthToken(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n      .catch(err => console.log(err))\n  }\n\n  fetchAuthToken = url => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n  }\n  getCurrentTeam = newTeamObj => {\n    this.setState({ currentTeam: newTeamObj })\n  }\n  logOut = () => {\n    localStorage.clear()\n    this.setState({loggedIn: false})\n    console.log('logged out')\n  }\n  selectContainer = e => {\n    this.setState({ showTeamContainer: !this.state.showTeamContainer })\n  }\n\n  // set state of current user ID after the login is successful\n  getUser = user => {\n    this.setState({ currentUser: user, loggedIn: true })\n  }\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      // currentUserId,\n      currentTeam,\n      currentUser,\n      loggedIn,\n      showTeamContainer,\n      yelpResults\n    } = this.state\n    // const currentUser = allUsers.length > 0 ? allUsers.find(user => user.id === currentUserId) : null;\n    const tokenCheck = localStorage.token ? true : false\n    console.log(tokenCheck, loggedIn)\n    console.log(this.state)\n\n    // return allUsers.length > 0 ? (\n    return true ? (\n      <div className=\"login-container\">\n        <Router>\n          {loggedIn ? <Link to='/login' onClick={this.logOut}>Log Out</Link> : null }\n          <Route\n            path=\"/login\"\n            render={() => (\n              loggedIn ? (\n              <Redirect to='/newteam' /> ):( \n              <LoginForm\n                getUser={this.getUser}\n                fetchUsers={this.fetchUsers}\n                fetchTeams={this.fetchTeams}\n              />)\n            )}\n          />\n          <Route \n            path=\"/createaccount\" \n            render={() => (\n              loggedIn ? (\n                <Redirect to='/newteam' />\n              ) : (\n                <NewUserForm />\n              )\n            )} \n          />\n          <Route\n            path=\"/newteam\"\n            render={() => (\n              loggedIn ? (\n              <TeamContainer\n                allUsers={allUsers}\n                allTeams={allTeams}\n                currentUser={currentUser}\n                fetchURL={fetchURL}\n                getCurrentTeam={this.getCurrentTeam}\n                currentTeam={currentTeam}\n                selectContainer={this.selectContainer}\n                fetchCurrentUser={this.fetchCurrentUser}\n                fetchUsers={this.fetchUsers}\n                fetchTeams={this.fetchTeams}\n              />) : (\n                <Redirect to='/login' />\n              )\n            )}\n          />\n          <Route\n            path=\"/roulette\"\n            render={() => (\n              loggedIn ? (\n              <RouletteContainer\n                fetchYelp={this.fetchYelp}\n                yelpResults={yelpResults}\n                selectContainer={this.selectContainer}\n                fetchCurrentUser={this.fetchCurrentUser}\n                fetchUsers={this.fetchUsers}\n                fetchTeams={this.fetchTeams}\n              /> ) : (\n                <Redirect to='/login' />\n              )\n            )}\n          />\n        </Router>\n      </div>\n    ) : (\n      <div>Loading...</div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}