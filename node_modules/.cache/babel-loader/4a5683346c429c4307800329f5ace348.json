{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js\";\nimport React, { Component } from \"react\";\nimport { Card, Icon, Image, Button } from \"semantic-ui-react\";\nexport default class RouletteCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      indexArray: [0]\n    };\n\n    this.randomYelp = array => {\n      let randIndex = Math.floor(Math.random() * 10);\n\n      while (array.includes(randIndex)) {\n        // console.log(randIndex)\n        randIndex = Math.floor(Math.random() * 10);\n      } // array.push(randIndex)\n\n\n      this.setState({\n        indexArray: [...this.state.indexArray, randIndex]\n      }); // console.log(array)\n      // return randIndex\n    };\n  }\n\n  render() {\n    const yelpResults = this.props.yelpResults;\n    const indexArray = this.state.indexArray;\n    let result = yelpResults[indexArray[indexArray.length - 1]];\n    console.log('yelp: ', yelpResults);\n    console.log('result: ', result);\n    const image_url = result.image_url,\n          name = result.name,\n          rating = result.rating,\n          display_address = result.location.display_address,\n          price = result.price,\n          is_closed = result.is_closed,\n          display_phone = result.display_phone;\n    return yelpResults.length > 0 ? React.createElement(\"div\", {\n      className: \"roulette-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: image_url,\n      wrapped: true,\n      ui: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, name), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Restaurant Descp\")), React.createElement(Button, {\n      onClick: () => this.randomYelp(indexArray),\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Spin Again\"), React.createElement(Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"OK\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading....\");\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/roulette/RouletteCard.js"],"names":["React","Component","Card","Icon","Image","Button","RouletteCard","state","indexArray","randomYelp","array","randIndex","Math","floor","random","includes","setState","render","yelpResults","props","result","length","console","log","image_url","name","rating","display_address","location","price","is_closed","display_phone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,mBAA1C;AAEA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDM,KADkD,GAC1C;AACNC,MAAAA,UAAU,EAAE,CAAC,CAAD;AADN,KAD0C;;AAAA,SAKlDC,UALkD,GAKrCC,KAAK,IAAI;AACpB,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAhB;;AACA,aAAOJ,KAAK,CAACK,QAAN,CAAeJ,SAAf,CAAP,EAAkC;AAChC;AACAA,QAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAZ;AACD,OALmB,CAMpB;;;AACA,WAAKE,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,EAA2BG,SAA3B;AAAd,OAAd,EAPoB,CAQpB;AACA;AACD,KAfiD;AAAA;;AAiBlDM,EAAAA,MAAM,GAAG;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAAA,UAECV,UAFD,GAEgB,KAAKD,KAFrB,CAECC,UAFD;AAGP,QAAIY,MAAM,GAAGF,WAAW,CAACV,UAAU,CAACA,UAAU,CAACa,MAAX,GAAoB,CAArB,CAAX,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,WAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAxB;AALO,UAOLI,SAPK,GAcHJ,MAdG,CAOLI,SAPK;AAAA,UAQLC,IARK,GAcHL,MAdG,CAQLK,IARK;AAAA,UASLC,MATK,GAcHN,MAdG,CASLM,MATK;AAAA,UAUOC,eAVP,GAcHP,MAdG,CAULQ,QAVK,CAUOD,eAVP;AAAA,UAWLE,KAXK,GAcHT,MAdG,CAWLS,KAXK;AAAA,UAYLC,SAZK,GAcHV,MAdG,CAYLU,SAZK;AAAA,UAaLC,aAbK,GAcHX,MAdG,CAaLW,aAbK;AAgBP,WAAOb,WAAW,CAACG,MAAZ,GAAqB,CAArB,GACL;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEG,SAAZ;AAAuB,MAAA,OAAO,MAA9B;AAA+B,MAAA,EAAE,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcC,IAAd,CADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAFF,EAME,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKhB,UAAL,CAAgBD,UAAhB,CAAvB;AAAoD,MAAA,OAAO,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,CADK,GAeH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfJ;AAiBD;;AAlDiD","sourcesContent":["import React, { Component } from \"react\"\nimport { Card, Icon, Image, Button } from \"semantic-ui-react\"\n\nexport default class RouletteCard extends Component {\n  state = {\n    indexArray: [0]\n  }\n\n  randomYelp = array => {\n    let randIndex = Math.floor(Math.random() * 10)\n    while (array.includes(randIndex)) {\n      // console.log(randIndex)\n      randIndex = Math.floor(Math.random() * 10)\n    }\n    // array.push(randIndex)\n    this.setState({ indexArray: [...this.state.indexArray, randIndex] })\n    // console.log(array)\n    // return randIndex\n  }\n\n  render() {\n    const { yelpResults } = this.props\n    const { indexArray } = this.state\n    let result = yelpResults[indexArray[indexArray.length - 1]]\n    console.log('yelp: ', yelpResults)\n    console.log('result: ', result)\n    const {\n      image_url,\n      name,\n      rating,\n      location: { display_address },\n      price,\n      is_closed,\n      display_phone\n    } = result\n    \n    return yelpResults.length > 0 ? (\n      <div className=\"roulette-card\">\n        <Card>\n          <Image src={image_url} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Description>Restaurant Descp</Card.Description>\n          </Card.Content>\n          <Button onClick={() => this.randomYelp(indexArray)} primary>\n            Spin Again\n          </Button>\n          <Button primary>OK</Button>\n        </Card>\n      </div>\n    ) : (\n        <div>Loading....</div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}