{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: \"\",\n      location: \"\",\n      searchInput: \"\",\n      members: [],\n      team_id: undefined\n    };\n\n    this.saveTeamMembers = () => {\n      // TODO Take array of members and run POST requests to the user_teams url\n      const fetchUserTeams = this.props.fetchURL + \"/user_teams\";\n      console.log(this.state.members);\n      this.state.members.forEach(member => {\n        fetch(fetchUserTeams, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: member.id,\n            team_id: this.state.team_id\n          })\n        }).then(res => res.json()).then(newMember => console.log(newMember)).catch(err => console.log(err));\n      });\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      const allTeams = this.props.allTeams;\n      this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput\n      }); // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()).then(team => this.setState({\n        team_id: team.id\n      })).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members,\n          team_name = _this$state.team_name,\n          location = _this$state.location;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(MemberList, {\n      members: members,\n      removeMember: this.removeMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(MemberForm, {\n      handleChange: this.handleChange,\n      saveTeamMembers: this.saveTeamMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(TeamSearch, {\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","TeamSearch","MemberForm","MemberList","_","TeamContainer","state","team_name","location","searchInput","members","team_id","undefined","saveTeamMembers","fetchUserTeams","props","fetchURL","console","log","forEach","member","fetch","method","headers","body","JSON","stringify","user_id","id","then","res","json","newMember","catch","err","addATeam","e","team","fetchTeams","allTeams","setState","teamNameInput","locationInput","addMember","memberCheck","includes","removeMember","newMemberArray","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\n\nexport default class TeamContainer extends Component {\n  state = {\n    team_name: \"\",\n    location: \"\",\n    searchInput: \"\",\n    members: [],\n    team_id: undefined\n  };\n\n  // saveTeam = () => {\n  //     // TODO Take teamname data and POST to teams url\n  //     const fetchTeams = this.props.fetchURL + \"/teams\"\n  //     fetch(fetchTeams).then(res => res.json())\n  //     .then(team => console.log(team))\n  // }\n\n  saveTeamMembers = () => {\n    // TODO Take array of members and run POST requests to the user_teams url\n    const fetchUserTeams = this.props.fetchURL + \"/user_teams\";\n    console.log(this.state.members);\n    this.state.members.forEach(member => {\n      fetch(fetchUserTeams, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          user_id: member.id,\n          team_id: this.state.team_id\n        })\n      })\n        .then(res => res.json())\n        .then(newMember => console.log(newMember))\n        .catch(err => console.log(err));\n    });\n  };\n\n  addATeam = (e, team) => {\n    const fetchTeams = this.props.fetchURL + \"/teams\";\n    const { allTeams } = this.props;\n    this.setState({\n      team_name: team.teamNameInput,\n      location: team.locationInput\n    });\n\n    // console.log(allTeams.filter(oldTeam => oldTeam.includes(team.teamNameInput)))\n    fetch(fetchTeams, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        team_name: team.teamNameInput\n      })\n    })\n      .then(res => res.json())\n      .then(team => this.setState({ team_id: team.id }))\n      .catch(err => console.log(err));\n  };\n\n  addMember = (e, member) => {\n    const memberCheck = this.state.members.includes(member);\n    if (!memberCheck) {\n      this.setState({ members: [...this.state.members, member] });\n    }\n  };\n\n  removeMember = (e, member) => {\n    const newMemberArray = [];\n    this.state.members.forEach(user => {\n      if (user !== member) {\n        newMemberArray.push(user);\n      }\n    });\n    this.setState({ members: newMemberArray });\n  };\n\n  handleChange = (e, value) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    const { allUsers, currentUser } = this.props;\n    const { searchInput, members, team_name, location } = this.state;\n    const filteredUsers = searchInput\n      ? allUsers.filter(user => user.username.includes(searchInput))\n      : null;\n    console.log(this.state);\n    return (\n      <div>\n        <TeamForm currentUser={currentUser} addATeam={this.addATeam} />\n        <MemberList members={members} removeMember={this.removeMember} />\n        <MemberForm\n          handleChange={this.handleChange}\n          saveTeamMembers={this.saveTeamMembers}\n\n        />\n        <TeamSearch addMember={this.addMember} filteredUsers={filteredUsers} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}