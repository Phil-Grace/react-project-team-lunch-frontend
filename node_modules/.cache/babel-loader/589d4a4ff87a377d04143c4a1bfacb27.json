{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: \"\",\n      location: \"\",\n      searchInput: \"\",\n      members: [],\n      team_id: 0\n    };\n\n    this.saveTeamMembers = () => {\n      // TODO Take array of members and run POST requests to the user_teams url\n      console.log(this.state.members);\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\"; // this.setState({\n      //     team_name: team.teamNameInput,\n      //     location: team.locationInput,\n      // })\n\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()).then(team => this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput,\n        team_id: team.id\n      })).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(MemberList, {\n      members: members,\n      removeMember: this.removeMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(MemberForm, {\n      handleChange: this.handleChange,\n      saveTeamMembers: this.saveTeamMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(TeamSearch, {\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","TeamSearch","MemberForm","MemberList","_","TeamContainer","state","team_name","location","searchInput","members","team_id","saveTeamMembers","console","log","addATeam","e","team","fetchTeams","props","fetchURL","fetch","method","headers","body","JSON","stringify","teamNameInput","then","res","json","setState","locationInput","id","catch","err","addMember","member","memberCheck","includes","removeMember","newMemberArray","forEach","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TeamForm from \"./TeamForm\";\nimport TeamSearch from \"./TeamSearch\";\nimport MemberForm from \"./MemberForm\";\nimport MemberList from \"./MemberList\";\nimport _ from \"lodash\";\n\nexport default class TeamContainer extends Component {\n  state = {\n    team_name: \"\",\n    location: \"\",\n    searchInput: \"\",\n    members: [],\n    team_id: 0\n  };\n\n  // saveTeam = () => {\n  //     // TODO Take teamname data and POST to teams url\n  //     const fetchTeams = this.props.fetchURL + \"/teams\"\n  //     fetch(fetchTeams).then(res => res.json())\n  //     .then(team => console.log(team))\n  // }\n\n  saveTeamMembers = () => {\n    // TODO Take array of members and run POST requests to the user_teams url\n    console.log(this.state.members);\n  };\n\n  addATeam = (e, team) => {\n    const fetchTeams = this.props.fetchURL + \"/teams\";\n    // this.setState({\n    //     team_name: team.teamNameInput,\n    //     location: team.locationInput,\n    // })\n    fetch(fetchTeams, {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        team_name: team.teamNameInput\n      })\n    })\n      .then(res => res.json())\n      .then(team =>\n        this.setState({\n          team_name: team.teamNameInput,\n          location: team.locationInput,\n          team_id: team.id\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  addMember = (e, member) => {\n    const memberCheck = this.state.members.includes(member);\n    if (!memberCheck) {\n      this.setState({ members: [...this.state.members, member] });\n    }\n  };\n\n  removeMember = (e, member) => {\n    const newMemberArray = [];\n    this.state.members.forEach(user => {\n      if (user !== member) {\n        newMemberArray.push(user);\n      }\n    });\n    this.setState({ members: newMemberArray });\n  };\n\n  handleChange = (e, value) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    const { allUsers, currentUser } = this.props;\n    const { searchInput, members } = this.state;\n    const filteredUsers = searchInput\n      ? allUsers.filter(user => user.username.includes(searchInput))\n      : null;\n    console.log(this.state)\n    return (\n      <div>\n        <TeamForm currentUser={currentUser} addATeam={this.addATeam} />\n        <MemberList members={members} removeMember={this.removeMember} />\n        <MemberForm\n          handleChange={this.handleChange}\n          saveTeamMembers={this.saveTeamMembers}\n        />\n        <TeamSearch addMember={this.addMember} filteredUsers={filteredUsers} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}