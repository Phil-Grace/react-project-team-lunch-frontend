{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from 'react';\nimport TeamForm from './TeamForm';\nimport TeamSearch from './TeamSearch';\nimport MemberForm from './MemberForm';\nimport MemberList from './MemberList';\nimport _ from \"lodash\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: '',\n      location: '',\n      searchInput: '',\n      members: [],\n      team_id: 0 // saveTeam = () => {\n      //     // TODO Take teamname data and POST to teams url\n      //     const fetchTeams = this.props.fetchURL + \"/teams\"\n      //     fetch(fetchTeams).then(res => res.json())\n      //     .then(team => console.log(team))\n      // }\n\n    };\n\n    this.saveTeamMembers = () => {\n      // TODO Take array of members and run POST requests to the user_teams url\n      console.log(this.state.members);\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput\n      });\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()).then(team => this.setState({\n        team_id: team.id\n      })).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(MemberList, {\n      members: members,\n      removeMember: this.removeMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(MemberForm, {\n      handleChange: this.handleChange,\n      saveTeamMembers: this.saveTeamMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(TeamSearch, {\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","TeamSearch","MemberForm","MemberList","_","TeamContainer","state","team_name","location","searchInput","members","team_id","saveTeamMembers","console","log","addATeam","e","team","fetchTeams","props","fetchURL","setState","teamNameInput","locationInput","fetch","method","headers","body","JSON","stringify","then","res","json","id","catch","err","addMember","member","memberCheck","includes","removeMember","newMemberArray","forEach","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TeamForm from './TeamForm'\nimport TeamSearch from './TeamSearch'\nimport MemberForm from './MemberForm'\nimport MemberList from './MemberList'\nimport _ from \"lodash\";\n\nexport default class TeamContainer extends Component {\n\n    state = {\n        team_name: '',\n        location: '',\n        searchInput: '',\n        members: [],\n        team_id: 0\n    }\n\n    // saveTeam = () => {\n    //     // TODO Take teamname data and POST to teams url\n    //     const fetchTeams = this.props.fetchURL + \"/teams\"\n    //     fetch(fetchTeams).then(res => res.json())\n    //     .then(team => console.log(team))\n    // }\n\n    saveTeamMembers = () => {\n        // TODO Take array of members and run POST requests to the user_teams url\n        console.log(this.state.members)\n    }\n\n    addATeam = (e, team) => {\n        const fetchTeams = this.props.fetchURL + \"/teams\"\n        this.setState({\n            team_name: team.teamNameInput,\n            location: team.locationInput,\n        })\n        fetch(fetchTeams, {\n            method: \"POST\",\n            headers: {\"content-type\": \"application/json\"},\n            body: JSON.stringify({\n                team_name: team.teamNameInput\n            })\n        }).then(res => res.json())\n        .then(team => this.setState({team_id: team.id}))\n        .catch(err => console.log(err))\n    }\n\n    addMember = (e, member) => {\n        const memberCheck = this.state.members.includes(member)\n        if (!memberCheck) {\n            this.setState({members: [...this.state.members, member]})\n        }\n    }\n\n    removeMember = (e, member) => {\n        const newMemberArray = []\n        this.state.members.forEach(user => {\n            if (user !== member) {\n                newMemberArray.push(user)\n            }\n        })\n        this.setState({members: newMemberArray})\n    }\n\n    handleChange = (e, value ) => {\n        this.setState({searchInput: value})\n    };\n\n    render() {\n        const {allUsers, currentUser} = this.props\n        const {searchInput, members} = this.state\n        const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null\n        console.log(this.state)\n        return (\n            <div>\n                <TeamForm currentUser={currentUser} addATeam={this.addATeam}/>\n                <MemberList members={members} removeMember={this.removeMember}/>\n                <MemberForm handleChange={this.handleChange} saveTeamMembers={this.saveTeamMembers}/>\n                <TeamSearch addMember={this.addMember} filteredUsers={filteredUsers}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}