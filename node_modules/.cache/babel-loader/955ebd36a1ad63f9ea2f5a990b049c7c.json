{"ast":null,"code":"var _jsxFileName = \"/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\nimport { Search } from \"semantic-ui-react\";\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\";\nconst fetchUserTeams = fetchURL + \"/user_teams\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      currentUserId: 1,\n      // update this to backend\n      yelpResults: [],\n      currentTeam: {},\n      showTeamContainer: false\n    };\n\n    this.fetchYelp = (location, term) => {\n      const querySearch = queryURL;\n      fetch(querySearch, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          term: term,\n          location: location\n        })\n      }).then(res => res.json()).then() // .then(data => this.setState({yelpResults: data.results}))\n      .catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      fetch(fetchUsers).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      }));\n    };\n\n    this.fetchTeams = () => {\n      fetch(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      }));\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchTeams();\n  }\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentUserId = _this$state.currentUserId,\n          currentTeam = _this$state.currentTeam,\n          showTeamContainer = _this$state.showTeamContainer,\n          yelpResults = _this$state.yelpResults;\n    const currentUser = allUsers.find(user => user.id === currentUserId);\n    console.log(yelpResults);\n    return allUsers.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, showTeamContainer ? React.createElement(TeamContainer, {\n      allUsers: allUsers,\n      allTeams: allTeams,\n      currentUser: currentUser,\n      fetchURL: fetchURL,\n      getCurrentTeam: this.getCurrentTeam,\n      currentTeam: currentTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : React.createElement(RouletteContainer, {\n      fetchYelp: this.fetchYelp,\n      yelpResults: yelpResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracetan/Development/module-projects/module_four_team_lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","ProfileContainer","TeamContainer","RouletteContainer","LoginContainer","Search","queryURL","fetchURL","fetchUsers","fetchTeams","fetchUserTeams","App","state","allUsers","allTeams","currentUserId","yelpResults","currentTeam","showTeamContainer","fetchYelp","location","term","querySearch","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","console","log","users","setState","teams","getCurrentTeam","newTeamObj","componentDidMount","render","currentUser","find","user","id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\nimport { Search } from \"semantic-ui-react\";\n\nconst queryURL = \"http://localhost:3000/search\";\nconst fetchURL = \"http://localhost:3000\" // Host\nconst fetchUsers = fetchURL + \"/users\"\nconst fetchTeams = fetchURL + \"/teams\"\nconst fetchUserTeams = fetchURL + \"/user_teams\";\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [],\n    currentUserId: 1, // update this to backend\n    yelpResults: [],\n    currentTeam: {},\n    showTeamContainer: false\n  };\n\n\ncomponentDidMount() {\n    this.fetchUsers();\n    this.fetchTeams();\n  }\n\n  fetchYelp = (location, term) => {\n    const querySearch = queryURL\n    fetch(querySearch, {\n      method: \"POST\",\n      headers: {\"content-type\": \"application/json\", \"accept\": \"application/json\"},\n      body: JSON.stringify({\n        term: term,\n        location: location\n      })\n    })\n    .then(res => res.json())\n    .then()\n    // .then(data => this.setState({yelpResults: data.results}))\n    .catch(err => console.log(err))\n  }\n  \n  fetchUsers = () => {\n    fetch(fetchUsers)\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n  }\n\n  fetchTeams = () => {\n    fetch(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n  }\n\n  getCurrentTeam = newTeamObj => {\n    this.setState({ currentTeam: newTeamObj })\n  }\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      currentUserId,\n      currentTeam,\n      showTeamContainer,\n      yelpResults\n    } = this.state\n    const currentUser = allUsers.find(user => user.id === currentUserId)\n    console.log(yelpResults)\n    return allUsers.length > 0 ? (\n      <div>\n        {/* <ProfileContainer currentUser={currentUser}/> */}\n        {showTeamContainer ? (\n          <TeamContainer\n            allUsers={allUsers}\n            allTeams={allTeams}\n            currentUser={currentUser}\n            fetchURL={fetchURL}\n            getCurrentTeam={this.getCurrentTeam}\n            currentTeam={currentTeam}\n          />\n        ) : (\n          <RouletteContainer fetchYelp={this.fetchYelp} yelpResults={yelpResults}/>\n        )}\n      </div>\n    ) : (\n      <div>Loading...</div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}