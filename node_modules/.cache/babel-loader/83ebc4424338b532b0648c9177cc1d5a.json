{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/login/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom'; // import NewUserForm from \"./NewUserForm\";\n\nconst loginURL = \"http://localhost:3000/login\"; // Host\n\nconst style = {\n  backgroundColor: '#D9D9D9',\n  height: \"100vh\"\n};\nexport default class LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usernameInput: '',\n      passwordInput: ''\n    };\n\n    this.handleSubmit = () => {\n      fetch(loginURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.usernameInput,\n          password: this.state.passwordInput\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        localStorage.setItem('token', data.jwt);\n        this.props.getUser(data.user);\n        this.props.fetchUsers();\n        this.props.fetchTeams();\n      }) // .then(userdata => this.props.getUserId(userdata.results))\n      .catch(err => console.log(err));\n    };\n\n    this.handleChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(\"div\", {\n      style: style,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"usernameInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"passwordInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"New to us? \", React.createElement(Link, {\n      to: \"/createaccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Create New Account\")))), \")\");\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/login/LoginForm.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Link","loginURL","style","backgroundColor","height","LoginForm","state","usernameInput","passwordInput","handleSubmit","fetch","method","headers","body","JSON","stringify","username","password","then","res","json","data","console","log","localStorage","setItem","jwt","props","getUser","user","fetchUsers","fetchTeams","catch","err","handleChange","e","targetValue","target","value","targetName","name","setState","render","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport {Link} from 'react-router-dom'\n// import NewUserForm from \"./NewUserForm\";\n\nconst loginURL = \"http://localhost:3000/login\" // Host\nconst style = {\n    backgroundColor: '#D9D9D9',\n    height: \"100vh\"\n}\n\nexport default class LoginForm extends Component {\n\n    state = {\n        usernameInput: '',\n        passwordInput: ''\n    }\n\n    handleSubmit = () => {\n        fetch(loginURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: this.state.usernameInput,\n                password: this.state.passwordInput\n            })\n        }).then(res => res.json())\n        .then(data => {\n            console.log(data)\n            localStorage.setItem('token', data.jwt)\n            this.props.getUser(data.user)\n            this.props.fetchUsers()\n            this.props.fetchTeams()\n        })\n        // .then(userdata => this.props.getUserId(userdata.results))\n        .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        const targetValue = e.target.value\n        const targetName = e.target.name\n        this.setState({[targetName]: targetValue})\n    }\n\n    render() {\n        // console.log(this.state)\n        return (\n        <div style={style} className='login-form'>\n            <Grid\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n            >\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Form size=\"large\" onSubmit={this.handleSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        onChange={this.handleChange}\n                        fluid\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        placeholder=\"Username\"\n                        type=\"text\"\n                        name=\"usernameInput\"\n                    />\n                    <Form.Input\n                        onChange={this.handleChange}\n                        fluid\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        name=\"passwordInput\"\n                    />\n                    <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\n                    Login\n                    </Button>\n                </Segment>\n                </Form>\n                <Message>\n                New to us? <Link to='/createaccount'>Create New Account</Link>\n                </Message>\n            </Grid.Column>\n            </Grid>\n            )\n        </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}