{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\"; // const fetchURL = \"http://10.198.66.254:3000\"; // Phil's\n// const fetchURL = \"http://10.198.66.254:3000\"; // Grace's\n\nconst fetchURL = \"http://localhost:3000\"; // Host\n\nconst fetchUsers = fetchURL + \"/users\";\nconst fetchTeams = fetchURL + \"/teams\"; // const fetchUserTeams = fetchURL + \"/user_teams\";\n// const queryURL1 = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/\";\n\nconst queryURL = \"http://localhost:3000/restaurants\"; // var apiKey = \"_8muJUEopjlHdnIimkRVTlubRBpzdp0Jf0HQXvLG2X0d3D0mNFJJanrWBqGU0jsnaTgTynfYmfpQrcSNhtfo51Kgr6UCKMFSjo5ZK03OFo7QBLz00fqMzW5ogrRyXXYx\"\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allUsers: [],\n      allTeams: [],\n      currentUserId: 1,\n      // update this to backend\n      // yelpResults: [],\n      currentTeam: {},\n      showTeamContainer: false\n    };\n\n    this.fetchYelp = (location, alias) => {\n      // location, alias\n      const querySearch = queryURL;\n      fetch(queryURL).then(res => res.json()).then(data => this.setState({\n        yelpResults: data\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUsers = () => {\n      fetch(fetchUsers).then(res => res.json()).then(users => this.setState({\n        allUsers: users\n      }));\n    };\n\n    this.fetchTeams = () => {\n      fetch(fetchTeams).then(res => res.json()).then(teams => this.setState({\n        allTeams: teams\n      }));\n    };\n\n    this.getCurrentTeam = newTeamObj => {\n      // TODO Moves the setstate of team_id to App level to pass to roulettecont\n      // console.log(newTeamObj)\n      this.setState({\n        currentTeam: newTeamObj\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchTeams(); // this.fetchYelp()\n  } // ---------------------\n\n\n  render() {\n    const _this$state = this.state,\n          allUsers = _this$state.allUsers,\n          allTeams = _this$state.allTeams,\n          currentUserId = _this$state.currentUserId,\n          currentTeam = _this$state.currentTeam,\n          showTeamContainer = _this$state.showTeamContainer,\n          yelpResults = _this$state.yelpResults;\n    const currentUser = allUsers.find(user => user.id === currentUserId); // console.log(this.state)\n\n    return allUsers.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, showTeamContainer ? React.createElement(TeamContainer, {\n      allUsers: allUsers,\n      allTeams: allTeams,\n      currentUser: currentUser,\n      fetchURL: fetchURL,\n      getCurrentTeam: this.getCurrentTeam,\n      currentTeam: currentTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : React.createElement(RouletteContainer, {\n      fetchYelp: this.fetchYelp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/App.js"],"names":["React","Component","ProfileContainer","TeamContainer","RouletteContainer","LoginContainer","fetchURL","fetchUsers","fetchTeams","queryURL","App","state","allUsers","allTeams","currentUserId","currentTeam","showTeamContainer","fetchYelp","location","alias","querySearch","fetch","then","res","json","data","setState","yelpResults","catch","err","console","log","users","teams","getCurrentTeam","newTeamObj","componentDidMount","render","currentUser","find","user","id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./profile/ProfileContainer\";\nimport TeamContainer from \"./team/TeamContainer\";\nimport RouletteContainer from \"./roulette/RouletteContainer\";\nimport LoginContainer from \"./login/LoginContainer\";\n\n// const fetchURL = \"http://10.198.66.254:3000\"; // Phil's\n// const fetchURL = \"http://10.198.66.254:3000\"; // Grace's\nconst fetchURL = \"http://localhost:3000\" // Host\nconst fetchUsers = fetchURL + \"/users\"\nconst fetchTeams = fetchURL + \"/teams\"\n// const fetchUserTeams = fetchURL + \"/user_teams\";\n\n// const queryURL1 = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/\";\nconst queryURL = \"http://localhost:3000/restaurants\";\n// var apiKey = \"_8muJUEopjlHdnIimkRVTlubRBpzdp0Jf0HQXvLG2X0d3D0mNFJJanrWBqGU0jsnaTgTynfYmfpQrcSNhtfo51Kgr6UCKMFSjo5ZK03OFo7QBLz00fqMzW5ogrRyXXYx\"\n\nclass App extends Component {\n  state = {\n    allUsers: [],\n    allTeams: [],\n    currentUserId: 1, // update this to backend\n    // yelpResults: [],\n    currentTeam: {},\n    showTeamContainer: false\n  };\n\n\ncomponentDidMount() {\n    this.fetchUsers();\n    this.fetchTeams();\n    // this.fetchYelp()\n  }\n\n// ---------------------\n  fetchYelp = (location, alias) => { // location, alias\n    const querySearch = queryURL\n    fetch(queryURL)\n    .then(res => res.json())\n    .then(data => this.setState({yelpResults: data}))\n    .catch(err => console.log(err))\n  }\n// ----------------------\n  \n  fetchUsers = () => {\n    fetch(fetchUsers)\n      .then(res => res.json())\n      .then(users => this.setState({ allUsers: users }))\n  }\n\n  // Need to do a fetch call for current user id through sessions\n\n  fetchTeams = () => {\n    fetch(fetchTeams)\n      .then(res => res.json())\n      .then(teams => this.setState({ allTeams: teams }))\n  }\n\n  getCurrentTeam = newTeamObj => {\n    // TODO Moves the setstate of team_id to App level to pass to roulettecont\n    // console.log(newTeamObj)\n    this.setState({ currentTeam: newTeamObj })\n  }\n\n  render() {\n    const {\n      allUsers,\n      allTeams,\n      currentUserId,\n      currentTeam,\n      showTeamContainer,\n      yelpResults\n    } = this.state\n    const currentUser = allUsers.find(user => user.id === currentUserId)\n    // console.log(this.state)\n    return allUsers.length > 0 ? (\n      <div>\n        {/* <ProfileContainer currentUser={currentUser}/> */}\n        {showTeamContainer ? (\n          <TeamContainer\n            allUsers={allUsers}\n            allTeams={allTeams}\n            currentUser={currentUser}\n            fetchURL={fetchURL}\n            getCurrentTeam={this.getCurrentTeam}\n            currentTeam={currentTeam}\n          />\n        ) : (\n          <RouletteContainer fetchYelp={this.fetchYelp} />\n        )}\n      </div>\n    ) : (\n      <div>Loading...</div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}