{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js\";\nimport React, { Component } from 'react';\nimport TeamForm from './TeamForm';\nimport TeamSearch from './TeamSearch';\nimport MemberForm from './MemberForm';\nimport MemberList from './MemberList';\nimport _ from \"lodash\";\nexport default class TeamContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team_name: '',\n      location: '',\n      searchInput: '',\n      members: []\n    };\n\n    this.saveTeam = () => {\n      // TODO Take teamname data and POST to teams url\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      fetch(fetchTeams).then(res => res.json()).then(team => console.log(team));\n    };\n\n    this.saveTeamMembers = () => {// TODO Take array of members and run POST requests to the user_teams url\n    };\n\n    this.addATeam = (e, team) => {\n      const fetchTeams = this.props.fetchURL + \"/teams\";\n      this.setState({\n        team_name: team.teamNameInput,\n        location: team.locationInput\n      }); // const { team_name, location } = this.state\n\n      fetch(fetchTeams, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          team_name: team.teamNameInput\n        })\n      }).then(res => res.json()).then(team => console.log(team)).catch(err => console.log(err));\n    };\n\n    this.addMember = (e, member) => {\n      const memberCheck = this.state.members.includes(member);\n\n      if (!memberCheck) {\n        this.setState({\n          members: [...this.state.members, member]\n        });\n      }\n    };\n\n    this.removeMember = (e, member) => {\n      const newMemberArray = [];\n      this.state.members.forEach(user => {\n        if (user !== member) {\n          newMemberArray.push(user);\n        }\n      });\n      this.setState({\n        members: newMemberArray\n      });\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          allUsers = _this$props.allUsers,\n          currentUser = _this$props.currentUser;\n    const _this$state = this.state,\n          searchInput = _this$state.searchInput,\n          members = _this$state.members;\n    const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TeamForm, {\n      currentUser: currentUser,\n      addATeam: this.addATeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(MemberList, {\n      members: members,\n      removeMember: this.removeMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(MemberForm, {\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(TeamSearch, {\n      addMember: this.addMember,\n      filteredUsers: filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phil/dev/projects/react-project-team-lunch/react-project-team-lunch-frontend/src/team/TeamContainer.js"],"names":["React","Component","TeamForm","TeamSearch","MemberForm","MemberList","_","TeamContainer","state","team_name","location","searchInput","members","saveTeam","fetchTeams","props","fetchURL","fetch","then","res","json","team","console","log","saveTeamMembers","addATeam","e","setState","teamNameInput","locationInput","method","headers","body","JSON","stringify","catch","err","addMember","member","memberCheck","includes","removeMember","newMemberArray","forEach","user","push","handleChange","value","render","allUsers","currentUser","filteredUsers","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TeamForm from './TeamForm'\nimport TeamSearch from './TeamSearch'\nimport MemberForm from './MemberForm'\nimport MemberList from './MemberList'\nimport _ from \"lodash\";\n\nexport default class TeamContainer extends Component {\n\n    state = {\n        team_name: '',\n        location: '',\n        searchInput: '',\n        members: []\n    }\n\n    saveTeam = () => {\n        // TODO Take teamname data and POST to teams url\n        const fetchTeams = this.props.fetchURL + \"/teams\"\n        fetch(fetchTeams).then(res => res.json())\n        .then(team => console.log(team))\n    }\n\n    saveTeamMembers = () => {\n        // TODO Take array of members and run POST requests to the user_teams url\n    }\n\n    addATeam = (e, team) => {\n        const fetchTeams = this.props.fetchURL + \"/teams\"\n        this.setState({\n            team_name: team.teamNameInput,\n            location: team.locationInput,\n        })\n        // const { team_name, location } = this.state\n        fetch(fetchTeams, {\n            method: \"POST\",\n            headers: {\"content-type\": \"application/json\"},\n            body: JSON.stringify({\n                team_name: team.teamNameInput\n            })\n        }).then(res => res.json())\n        .then(team => console.log(team))\n        .catch(err => console.log(err))\n    }\n\n    addMember = (e, member) => {\n        const memberCheck = this.state.members.includes(member)\n        if (!memberCheck) {\n            this.setState({members: [...this.state.members, member]})\n        }\n    }\n\n    removeMember = (e, member) => {\n        const newMemberArray = []\n        this.state.members.forEach(user => {\n            if (user !== member) {\n                newMemberArray.push(user)\n            }\n        })\n        this.setState({members: newMemberArray})\n    }\n\n    handleChange = (e, value ) => {\n        this.setState({searchInput: value})\n    };\n\n    render() {\n        const {allUsers, currentUser} = this.props\n        const {searchInput, members} = this.state\n        const filteredUsers = searchInput ? allUsers.filter(user => user.username.includes(searchInput)) : null\n        console.log(this.props)\n        return (\n            <div>\n                <TeamForm currentUser={currentUser} addATeam={this.addATeam}/>\n                <MemberList members={members} removeMember={this.removeMember}/>\n                <MemberForm handleChange={this.handleChange}/>\n                <TeamSearch addMember={this.addMember} filteredUsers={filteredUsers}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}